---- Exploratory Data Analysis --------------

val df = spark.read.format("csv").option("header","true").option("inferSchema","true").load("attrition/HR-Employee-Attrition.csv")

df.printSchema
root
 |-- Age: integer (nullable = true)
 |-- Attrition: string (nullable = true)
 |-- BusinessTravel: string (nullable = true)
 |-- DailyRate: integer (nullable = true)
 |-- Department: string (nullable = true)
 |-- DistanceFromHome: integer (nullable = true)
 |-- Education: integer (nullable = true)
 |-- EducationField: string (nullable = true)
 |-- EmployeeCount: integer (nullable = true)
 |-- EmployeeNumber: integer (nullable = true)
 |-- EnvironmentSatisfaction: integer (nullable = true)
 |-- Gender: string (nullable = true)
 |-- HourlyRate: integer (nullable = true)
 |-- JobInvolvement: integer (nullable = true)
 |-- JobLevel: integer (nullable = true)
 |-- JobRole: string (nullable = true)
 |-- JobSatisfaction: integer (nullable = true)
 |-- MaritalStatus: string (nullable = true)
 |-- MonthlyIncome: integer (nullable = true)
 |-- MonthlyRate: integer (nullable = true)
 |-- NumCompaniesWorked: integer (nullable = true)
 |-- Over18: string (nullable = true)
 |-- OverTime: string (nullable = true)
 |-- PercentSalaryHike: integer (nullable = true)
 |-- PerformanceRating: integer (nullable = true)
 |-- RelationshipSatisfaction: integer (nullable = true)
 |-- StandardHours: integer (nullable = true)
 |-- StockOptionLevel: integer (nullable = true)
 |-- TotalWorkingYears: integer (nullable = true)
 |-- TrainingTimesLastYear: integer (nullable = true)
 |-- WorkLifeBalance: integer (nullable = true)
 |-- YearsAtCompany: integer (nullable = true)
 |-- YearsInCurrentRole: integer (nullable = true)
 |-- YearsSinceLastPromotion: integer (nullable = true)
 |-- YearsWithCurrManager: integer (nullable = true)

df.show(10)

|Age|Attrition|   BusinessTravel|DailyRate|          Department|DistanceFromHome|Education|EducationField|EmployeeCount|EmployeeNumber|EnvironmentSatisfaction|Gender|HourlyRate|JobInvolvement|JobLevel|             JobRole|JobSatisfaction|MaritalStatus|MonthlyIncome|MonthlyRate|NumCompaniesWorked|Over18|OverTime|PercentSalaryHike|PerformanceRating|RelationshipSatisfaction|StandardHours|StockOptionLevel|TotalWorkingYears|TrainingTimesLastYear|WorkLifeBalance|YearsAtCompany|YearsInCurrentRole|YearsSinceLastPromotion|YearsWithCurrManager|

| 41|      Yes|    Travel_Rarely|     1102|               Sales|               1|        2| Life Sciences|            1|             1|                      2|Female|        94|             3|       2|     Sales Executive|              4|       Single|         5993|      19479|                 8|     Y|     Yes|               11|                3|                       1|           80|               0|                8|                    0|              1|             6|                 4|                      0|                   5|
| 49|       No|Travel_Frequently|      279|Research & Develo...|               8|        1| Life Sciences|            1|             2|                      3|  Male|        61|             2|       2|  Research Scientist|              2|      Married|         5130|      24907|                 1|     Y|      No|               23|                4|                       4|           80|               1|               10|                    3|              3|            10|                 7|                      1|                   7|
| 37|      Yes|    Travel_Rarely|     1373|Research & Develo...|               2|        2|         Other|            1|             4|                      4|  Male|        92|             2|       1|Laboratory Techni...|              3|       Single|         2090|       2396|                 6|     Y|     Yes|               15|                3|                       2|           80|               0|                7|                    3|              3|             0|                 0|                      0|                   0|
| 33|       No|Travel_Frequently|     1392|Research & Develo...|               3|        4| Life Sciences|            1|             5|                      4|Female|        56|             3|       1|  Research Scientist|              3|      Married|         2909|      23159|                 1|     Y|     Yes|               11|                3|                       3|           80|               0|                8|                    3|              3|             8|                 7|                      3|                   0|
| 27|       No|    Travel_Rarely|      591|Research & Develo...|               2|        1|       Medical|            1|             7|                      1|  Male|        40|             3|       1|Laboratory Techni...|              2|      Married|         3468|      16632|                 9|     Y|      No|               12|                3|                       4|           80|               1|                6|                    3|              3|             2|                 2|                      2|                   2|
| 32|       No|Travel_Frequently|     1005|Research & Develo...|               2|        2| Life Sciences|            1|             8|                      4|  Male|        79|             3|       1|Laboratory Techni...|              4|       Single|         3068|      11864|                 0|     Y|      No|               13|                3|                       3|           80|               0|                8|                    2|              2|             7|                 7|                      3|                   6|
| 59|       No|    Travel_Rarely|     1324|Research & Develo...|               3|        3|       Medical|            1|            10|                      3|Female|        81|             4|       1|Laboratory Techni...|              1|      Married|         2670|       9964|                 4|     Y|     Yes|               20|                4|                       1|           80|               3|               12|                    3|              2|             1|                 0|                      0|                   0|
| 30|       No|    Travel_Rarely|     1358|Research & Develo...|              24|        1| Life Sciences|            1|            11|                      4|  Male|        67|             3|       1|Laboratory Techni...|              3|     Divorced|         2693|      13335|                 1|     Y|      No|               22|                4|                       2|           80|               1|                1|                    2|              3|             1|                 0|                      0|                   0|
| 38|       No|Travel_Frequently|      216|Research & Develo...|              23|        3| Life Sciences|            1|            12|                      4|  Male|        44|             2|       3|Manufacturing Dir...|              3|       Single|         9526|       8787|                 0|     Y|      No|               21|                4|                       2|           80|               0|               10|                    2|              3|             9|                 7|                      1|                   8|
| 36|       No|    Travel_Rarely|     1299|Research & Develo...|              27|        3|       Medical|            1|            13|                      3|  Male|        94|             3|       2|Healthcare Repres...|              3|      Married|         5237|      16577|                 6|     Y|      No|               13|                3|                       2|           80|               2|               17|                    3|              2|             7|                 7|                      7|                   7|

only showing top 10 rows


df.describe().show

|summary|               Age|Attrition|BusinessTravel|         DailyRate|     Department|DistanceFromHome|         Education|  EducationField|EmployeeCount|   EmployeeNumber|EnvironmentSatisfaction|Gender|        HourlyRate|    JobInvolvement|          JobLevel|             JobRole|   JobSatisfaction|MaritalStatus|    MonthlyIncome|       MonthlyRate|NumCompaniesWorked|Over18|OverTime| PercentSalaryHike|  PerformanceRating|RelationshipSatisfaction|StandardHours|  StockOptionLevel| TotalWorkingYears|TrainingTimesLastYear|   WorkLifeBalance|    YearsAtCompany|YearsInCurrentRole|YearsSinceLastPromotion|YearsWithCurrManager|

|  count|              1470|     1470|          1470|              1470|           1470|            1470|              1470|            1470|         1470|             1470|                   1470|  1470|              1470|              1470|              1470|                1470|              1470|         1470|             1470|              1470|              1470|  1470|    1470|              1470|               1470|                    1470|         1470|              1470|              1470|                 1470|              1470|              1470|              1470|                   1470|                1470|
|   mean|36.923809523809524|     null|          null| 802.4857142857143|           null|9.19251700680272| 2.912925170068027|            null|          1.0|1024.865306122449|      2.721768707482993|  null| 65.89115646258503|2.7299319727891156|2.0639455782312925|                null|2.7285714285714286|         null|6502.931292517007|14313.103401360544|2.6931972789115646|  null|    null|15.209523809523809| 3.1537414965986397|      2.7122448979591836|         80.0|0.7938775510204081|11.279591836734694|   2.7993197278911564|2.7612244897959184|7.0081632653061225| 4.229251700680272|     2.1877551020408164|    4.12312925170068|
| stddev| 9.135373489136729|     null|          null|403.50909994352804|           null|8.10686443566608|1.0241649445978718|            null|          0.0|602.0243348474752|     1.0930822146350003|  null|20.329427593996176|0.7115611429632297|1.1069398989351202|                null|1.1028461230547213|         null|4707.956783097992| 7117.786044059972|2.4980090060707463|  null|    null|3.6599377165396385|0.36082352460434397|      1.0812088864403517|          0.0|0.8520766679308381| 7.780781675514995|   1.2892706207958466|0.7064758297141507| 6.126525152403571| 3.623137034670627|     3.2224302791379693|  3.5681361205404363|
|    min|                18|       No|    Non-Travel|               102|Human Resources|               1|                 1| Human Resources|            1|                1|                      1|Female|                30|                 1|                 1|Healthcare Repres...|                 1|     Divorced|             1009|              2094|                 0|     Y|      No|                11|                  3|                       1|           80|                 0|                 0|                    0|                 1|                 0|                 0|                      0|                   0|
|    max|                60|      Yes| Travel_Rarely|              1499|          Sales|              29|                 5|Technical Degree|            1|             2068|                      4|  Male|               100|                 4|                 5|Sales Representative|                 4|       Single|            19999|             26999|                 9|     Y|     Yes|                25|                  4|                       4|           80|                 3|                40|                    6|                 4|                40|                18|                     15|                  17|


df.groupBy('BusinessTravel).count.show
+-----------------+-----+
|   BusinessTravel|count|
+-----------------+-----+
|Travel_Frequently|  277|
|       Non-Travel|  150|
|    Travel_Rarely| 1043|
+-----------------+-----+

df.groupBy('Department).count.show
+--------------------+-----+
|          Department|count|
+--------------------+-----+
|               Sales|  446|
|Research & Develo...|  961|
|     Human Resources|   63|
+--------------------+-----+

df.groupBy('EducationField).count.show
+----------------+-----+
|  EducationField|count|
+----------------+-----+
|Technical Degree|  132|
|           Other|   82|
|       Marketing|  159|
|         Medical|  464|
|   Life Sciences|  606|
| Human Resources|   27|
+----------------+-----+

df.groupBy('Gender).count.show
+------+-----+
|Gender|count|
+------+-----+
|Female|  588|
|  Male|  882|
+------+-----+

df.groupBy('JobRole).count.show
+--------------------+-----+
|             JobRole|count|
+--------------------+-----+
|     Sales Executive|  326|
|Manufacturing Dir...|  145|
|Laboratory Techni...|  259|
|Sales Representative|   83|
|Healthcare Repres...|  131|
|  Research Scientist|  292|
|             Manager|  102|
|   Research Director|   80|
|     Human Resources|   52|
+--------------------+-----+

df.groupBy('MaritalStatus).count.show
+-------------+-----+
|MaritalStatus|count|
+-------------+-----+
|      Married|  673|
|     Divorced|  327|
|       Single|  470|
+-------------+-----+

df.groupBy('OverTime).count.show
+--------+-----+
|OverTime|count|
+--------+-----+
|      No| 1054|
|     Yes|  416|
+--------+-----+

df.groupBy('Attrition).count.show
+---------+-----+
|Attrition|count|
+---------+-----+
|       No| 1233|
|      Yes|  237|
+---------+-----+

val df1 = df.select("BusinessTravel","Department","EducationField","Gender","JobRole","MaritalStatus","OverTime","Education","Age","DistanceFromHome","EnvironmentSatisfaction","JobInvolvement","JobSatisfaction","MonthlyIncome","NumCompaniesWorked","PerformanceRating","RelationshipSatisfaction","StockOptionLevel","TotalWorkingYears","TrainingTimesLastYear","WorkLifeBalance","YearsAtCompany","YearsInCurrentRole","YearsSinceLastPromotion","YearsWithCurrManager","Attrition")

df1.printSchema
root
 |-- BusinessTravel: string (nullable = true)
 |-- Department: string (nullable = true)
 |-- EducationField: string (nullable = true)
 |-- Gender: string (nullable = true)
 |-- JobRole: string (nullable = true)
 |-- MaritalStatus: string (nullable = true)
 |-- OverTime: string (nullable = true)
 |-- Education: integer (nullable = true)
 |-- Age: integer (nullable = true)
 |-- DistanceFromHome: integer (nullable = true)
 |-- EnvironmentSatisfaction: integer (nullable = true)
 |-- JobInvolvement: integer (nullable = true)
 |-- JobSatisfaction: integer (nullable = true)
 |-- MonthlyIncome: integer (nullable = true)
 |-- NumCompaniesWorked: integer (nullable = true)
 |-- PerformanceRating: integer (nullable = true)
 |-- RelationshipSatisfaction: integer (nullable = true)
 |-- StockOptionLevel: integer (nullable = true)
 |-- TotalWorkingYears: integer (nullable = true)
 |-- TrainingTimesLastYear: integer (nullable = true)
 |-- WorkLifeBalance: integer (nullable = true)
 |-- YearsAtCompany: integer (nullable = true)
 |-- YearsInCurrentRole: integer (nullable = true)
 |-- YearsSinceLastPromotion: integer (nullable = true)
 |-- YearsWithCurrManager: integer (nullable = true)
 |-- Attrition: string (nullable = true)


---- Feature extraction & Data Munging --------------
 
import org.apache.spark.ml.feature.{StringIndexer, OneHotEncoder, VectorAssembler}

val dfInd1 = new StringIndexer().setInputCol("BusinessTravel").setOutputCol("BusinessTravelIdx")
val dfInd2 = new StringIndexer().setInputCol("Department").setOutputCol("DepartmentIdx")
val dfInd3 = new StringIndexer().setInputCol("EducationField").setOutputCol("EducationFieldIdx")
val dfInd4 = new StringIndexer().setInputCol("Gender").setOutputCol("GenderIdx")
val dfInd5 = new StringIndexer().setInputCol("JobRole").setOutputCol("JobRoleIdx")
val dfInd6 = new StringIndexer().setInputCol("MaritalStatus").setOutputCol("MaritalStatusIdx")
val dfInd7 = new StringIndexer().setInputCol("OverTime").setOutputCol("OverTimeIdx")
val dfInd8 = new StringIndexer().setInputCol("Attrition").setOutputCol("label")

val dfOne1 = new OneHotEncoder().setInputCol("BusinessTravelIdx").setOutputCol("BusinessTravelVect")
val dfOne2 = new OneHotEncoder().setInputCol("DepartmentIdx").setOutputCol("DepartmentVect")
val dfOne3 = new OneHotEncoder().setInputCol("EducationFieldIdx").setOutputCol("EducationFieldVect")
val dfOne4 = new OneHotEncoder().setInputCol("GenderIdx").setOutputCol("GenderVect")
val dfOne5 = new OneHotEncoder().setInputCol("JobRoleIdx").setOutputCol("JobRoleVect")
val dfOne6 = new OneHotEncoder().setInputCol("MaritalStatusIdx").setOutputCol("MaritalStatusVect")
val dfOne7 = new OneHotEncoder().setInputCol("OverTimeIdx").setOutputCol("OverTimeVect")

val va = new VectorAssembler().setOutputCol("features").setInputCols(Array("BusinessTravelVect","DepartmentVect","EducationFieldVect","GenderVect","JobRoleVect","MaritalStatusVect","OverTimeVect","Education","Age","DistanceFromHome","EnvironmentSatisfaction","JobInvolvement","JobSatisfaction","MonthlyIncome","NumCompaniesWorked","PerformanceRating","RelationshipSatisfaction","StockOptionLevel","TotalWorkingYears","TrainingTimesLastYear","WorkLifeBalance","YearsAtCompany","YearsInCurrentRole","YearsSinceLastPromotion","YearsWithCurrManager"))

import org.apache.spark.ml.Pipeline
val pipeline = new Pipeline().setStages(Array(dfInd1,dfInd2,dfInd3,dfInd4,dfInd5,dfInd6,dfInd7,dfInd8,dfOne1,dfOne2,dfOne3,dfOne4,dfOne5,dfOne6,dfOne7,va))

val df2 = pipeline.fit(df1).transform(df1)

df2.printSchema
root
 |-- BusinessTravel: string (nullable = true)
 |-- Department: string (nullable = true)
 |-- EducationField: string (nullable = true)
 |-- Gender: string (nullable = true)
 |-- JobRole: string (nullable = true)
 |-- MaritalStatus: string (nullable = true)
 |-- OverTime: string (nullable = true)
 |-- Education: integer (nullable = true)
 |-- Age: integer (nullable = true)
 |-- DistanceFromHome: integer (nullable = true)
 |-- EnvironmentSatisfaction: integer (nullable = true)
 |-- JobInvolvement: integer (nullable = true)
 |-- JobSatisfaction: integer (nullable = true)
 |-- MonthlyIncome: integer (nullable = true)
 |-- NumCompaniesWorked: integer (nullable = true)
 |-- PerformanceRating: integer (nullable = true)
 |-- RelationshipSatisfaction: integer (nullable = true)
 |-- StockOptionLevel: integer (nullable = true)
 |-- TotalWorkingYears: integer (nullable = true)
 |-- TrainingTimesLastYear: integer (nullable = true)
 |-- WorkLifeBalance: integer (nullable = true)
 |-- YearsAtCompany: integer (nullable = true)
 |-- YearsInCurrentRole: integer (nullable = true)
 |-- YearsSinceLastPromotion: integer (nullable = true)
 |-- YearsWithCurrManager: integer (nullable = true)
 |-- Attrition: string (nullable = true)
 |-- BusinessTravelIdx: double (nullable = false)
 |-- DepartmentIdx: double (nullable = false)
 |-- EducationFieldIdx: double (nullable = false)
 |-- GenderIdx: double (nullable = false)
 |-- JobRoleIdx: double (nullable = false)
 |-- MaritalStatusIdx: double (nullable = false)
 |-- OverTimeIdx: double (nullable = false)
 |-- label: double (nullable = false)
 |-- BusinessTravelVect: vector (nullable = true)
 |-- DepartmentVect: vector (nullable = true)
 |-- EducationFieldVect: vector (nullable = true)
 |-- GenderVect: vector (nullable = true)
 |-- JobRoleVect: vector (nullable = true)
 |-- MaritalStatusVect: vector (nullable = true)
 |-- OverTimeVect: vector (nullable = true)
 |-- features: vector (nullable = true)


df2.show(10)

|   BusinessTravel|          Department|EducationField|Gender|             JobRole|MaritalStatus|OverTime|Education|Age|DistanceFromHome|EnvironmentSatisfaction|JobInvolvement|JobSatisfaction|MonthlyIncome|NumCompaniesWorked|PerformanceRating|RelationshipSatisfaction|StockOptionLevel|TotalWorkingYears|TrainingTimesLastYear|WorkLifeBalance|YearsAtCompany|YearsInCurrentRole|YearsSinceLastPromotion|YearsWithCurrManager|Attrition|BusinessTravelIdx|DepartmentIdx|EducationFieldIdx|GenderIdx|JobRoleIdx|MaritalStatusIdx|OverTimeIdx|label|BusinessTravelVect|DepartmentVect|EducationFieldVect|   GenderVect|  JobRoleVect|MaritalStatusVect| OverTimeVect|            features|

|    Travel_Rarely|               Sales| Life Sciences|Female|     Sales Executive|       Single|     Yes|        2| 41|               1|                      2|             3|              4|         5993|                 8|                3|                       1|               0|                8|                    0|              1|             6|                 4|                      0|                   5|      Yes|              0.0|          1.0|              0.0|      1.0|       0.0|             1.0|        1.0|  1.0|     (2,[0],[1.0])| (2,[1],[1.0])|     (5,[0],[1.0])|    (1,[],[])|(8,[0],[1.0])|    (2,[1],[1.0])|    (1,[],[])|(39,[0,3,4,10,19,...|
|Travel_Frequently|Research & Develo...| Life Sciences|  Male|  Research Scientist|      Married|      No|        1| 49|               8|                      3|             2|              2|         5130|                 1|                4|                       4|               1|               10|                    3|              3|            10|                 7|                      1|                   7|       No|              1.0|          0.0|              0.0|      0.0|       1.0|             0.0|        0.0|  0.0|     (2,[1],[1.0])| (2,[0],[1.0])|     (5,[0],[1.0])|(1,[0],[1.0])|(8,[1],[1.0])|    (2,[0],[1.0])|(1,[0],[1.0])|[0.0,1.0,1.0,0.0,...|
|    Travel_Rarely|Research & Develo...|         Other|  Male|Laboratory Techni...|       Single|     Yes|        2| 37|               2|                      4|             2|              3|         2090|                 6|                3|                       2|               0|                7|                    3|              3|             0|                 0|                      0|                   0|      Yes|              0.0|          0.0|              4.0|      0.0|       2.0|             1.0|        1.0|  1.0|     (2,[0],[1.0])| (2,[0],[1.0])|     (5,[4],[1.0])|(1,[0],[1.0])|(8,[2],[1.0])|    (2,[1],[1.0])|    (1,[],[])|(39,[0,2,8,9,12,1...|
|Travel_Frequently|Research & Develo...| Life Sciences|Female|  Research Scientist|      Married|     Yes|        4| 33|               3|                      4|             3|              3|         2909|                 1|                3|                       3|               0|                8|                    3|              3|             8|                 7|                      3|                   0|       No|              1.0|          0.0|              0.0|      1.0|       1.0|             0.0|        1.0|  0.0|     (2,[1],[1.0])| (2,[0],[1.0])|     (5,[0],[1.0])|    (1,[],[])|(8,[1],[1.0])|    (2,[0],[1.0])|    (1,[],[])|(39,[1,2,4,11,18,...|
|    Travel_Rarely|Research & Develo...|       Medical|  Male|Laboratory Techni...|      Married|      No|        1| 27|               2|                      1|             3|              2|         3468|                 9|                3|                       4|               1|                6|                    3|              3|             2|                 2|                      2|                   2|       No|              0.0|          0.0|              1.0|      0.0|       2.0|             0.0|        0.0|  0.0|     (2,[0],[1.0])| (2,[0],[1.0])|     (5,[1],[1.0])|(1,[0],[1.0])|(8,[2],[1.0])|    (2,[0],[1.0])|(1,[0],[1.0])|[1.0,0.0,1.0,0.0,...|
|Travel_Frequently|Research & Develo...| Life Sciences|  Male|Laboratory Techni...|       Single|      No|        2| 32|               2|                      4|             3|              4|         3068|                 0|                3|                       3|               0|                8|                    2|              2|             7|                 7|                      3|                   6|       No|              1.0|          0.0|              0.0|      0.0|       2.0|             1.0|        0.0|  0.0|     (2,[1],[1.0])| (2,[0],[1.0])|     (5,[0],[1.0])|(1,[0],[1.0])|(8,[2],[1.0])|    (2,[1],[1.0])|(1,[0],[1.0])|(39,[1,2,4,9,12,1...|
|    Travel_Rarely|Research & Develo...|       Medical|Female|Laboratory Techni...|      Married|     Yes|        3| 59|               3|                      3|             4|              1|         2670|                 4|                4|                       1|               3|               12|                    3|              2|             1|                 0|                      0|                   0|       No|              0.0|          0.0|              1.0|      1.0|       2.0|             0.0|        1.0|  0.0|     (2,[0],[1.0])| (2,[0],[1.0])|     (5,[1],[1.0])|    (1,[],[])|(8,[2],[1.0])|    (2,[0],[1.0])|    (1,[],[])|(39,[0,2,5,12,18,...|
|    Travel_Rarely|Research & Develo...| Life Sciences|  Male|Laboratory Techni...|     Divorced|      No|        1| 30|              24|                      4|             3|              3|         2693|                 1|                4|                       2|               1|                1|                    2|              3|             1|                 0|                      0|                   0|       No|              0.0|          0.0|              0.0|      0.0|       2.0|             2.0|        0.0|  0.0|     (2,[0],[1.0])| (2,[0],[1.0])|     (5,[0],[1.0])|(1,[0],[1.0])|(8,[2],[1.0])|        (2,[],[])|(1,[0],[1.0])|(39,[0,2,4,9,12,2...|
|Travel_Frequently|Research & Develo...| Life Sciences|  Male|Manufacturing Dir...|       Single|      No|        3| 38|              23|                      4|             2|              3|         9526|                 0|                4|                       2|               0|               10|                    2|              3|             9|                 7|                      1|                   8|       No|              1.0|          0.0|              0.0|      0.0|       3.0|             1.0|        0.0|  0.0|     (2,[1],[1.0])| (2,[0],[1.0])|     (5,[0],[1.0])|(1,[0],[1.0])|(8,[3],[1.0])|    (2,[1],[1.0])|(1,[0],[1.0])|(39,[1,2,4,9,13,1...|
|    Travel_Rarely|Research & Develo...|       Medical|  Male|Healthcare Repres...|      Married|      No|        3| 36|              27|                      3|             3|              3|         5237|                 6|                3|                       2|               2|               17|                    3|              2|             7|                 7|                      7|                   7|       No|              0.0|          0.0|              1.0|      0.0|       4.0|             0.0|        0.0|  0.0|     (2,[0],[1.0])| (2,[0],[1.0])|     (5,[1],[1.0])|(1,[0],[1.0])|(8,[4],[1.0])|    (2,[0],[1.0])|(1,[0],[1.0])|[1.0,0.0,1.0,0.0,...|

only showing top 10 rows


// calculate pearson correlation to check multicolinearity

import org.apache.spark.ml.stat.Correlation
import org.apache.spark.ml.linalg.Matrix
import org.apache.spark.sql.Row

val corr = Correlation.corr(df2, "features", "pearson").head match {
   case Row(coeff: Matrix) => coeff
}
corr: org.apache.spark.ml.linalg.Matrix =
1.0                    -0.7530917316140997    ... (39 total)
-0.7530917316140997    1.0                    ...
4.649251684764195E-4   0.0033403757431234404  ...
-0.004718436602848508  -1.595931237886972E-4  ...
-0.030354664862438232  0.031127869784586423   ...
-0.003930283996297947  -0.005367258587554498  ...
0.03466819894034202    -0.016585503213132683  ...
0.017521207709293104   -0.02356906391464155   ...
0.01840610926247411    -0.011003545648425322  ...
-0.014681807474915645  -0.02201536865533326   ...
-0.011920091976733257  -0.010174885520233606  ...
0.010587650190985428   -0.004460912029783514  ...
-0.014814823377194253  0.010023442547495024   ...
5.982600689696671E-4   0.009782838341375001   ...
-0.015502675658571507  0.008028710739603342 ...


corr.toDense.rowIter.foreach( x => {
  val size = x.size
  for ( i <- Range(0,size)) { 
    val elem = x(i)
    print(f"$elem%.3f\t") 
  }
  println
})
// "BusinessTravelVect","DepartmentVect","EducationFieldVect","GenderVect","JobRoleVect","MaritalStatusVect","OverTimeVect","Education","Age","DistanceFromHome","EnvironmentSatisfaction","JobInvolvement","JobSatisfaction","MonthlyIncome","NumCompaniesWorked","PerformanceRating","RelationshipSatisfaction","StockOptionLevel","TotalWorkingYears","TrainingTimesLastYear","WorkLifeBalance","YearsAtCompany","YearsInCurrentRole","YearsSinceLastPromotion","YearsWithCurrManager"
1.000   -0.753  0.000   -0.005  -0.030  -0.004  0.035   0.018   0.018   -0.015  -0.012  0.011   -0.015  0.001   -0.016  0.027   -0.0250.035   0.056   -0.021  0.001   0.004   0.029   -0.020  0.008   0.027   -0.037  0.039   0.032   -0.026  -0.039  -0.005  0.030   0.008-0.013   -0.016  -0.009  -0.034  -0.022
-0.753  1.000   0.003   -0.000  0.031   -0.005  -0.017  -0.024  -0.011  -0.022  -0.010  -0.004  0.010   0.010   0.008   -0.043  0.055-0.024   -0.031  0.028   -0.029  -0.008  -0.025  0.005   -0.013  0.004   0.027   -0.032  -0.040  0.016   0.029   -0.016  -0.012  0.0060.010    0.013   0.002   0.023   0.013
0.000   0.003   1.000   -0.907  0.127   0.184   -0.479  0.039   0.065   0.016   -0.733  0.362   0.337   0.241   0.228   -0.071  -0.3360.175   -0.020  -0.010  0.003   -0.019  0.018   -0.008  0.028   0.023   -0.003  -0.065  0.022   0.033   -0.005  0.017   0.011   -0.007-0.070  -0.032  -0.028  -0.021  -0.015
-0.005  -0.000  -0.907  1.000   -0.102  -0.168  0.528   -0.031  -0.064  -0.032  0.809   -0.329  -0.305  -0.218  -0.206  0.035   0.371-0.158   0.005   0.033   -0.006  0.014   -0.028  0.014   -0.026  -0.026  0.013   0.064   -0.032  -0.031  -0.010  -0.016  -0.015  0.0250.051    0.030   0.047   0.034   0.027
-0.030  0.031   0.127   -0.102  1.000   -0.569  -0.292  -0.263  -0.204  0.007   -0.091  0.044   0.044   0.052   0.029   -0.011  -0.0430.018   -0.018  0.021   0.014   0.013   0.017   -0.024  -0.025  0.003   0.052   -0.007  -0.006  0.011   -0.020  -0.018  -0.004  -0.039-0.040  -0.002  0.018   -0.002  0.004
-0.004  -0.005  0.184   -0.168  -0.569  1.000   -0.237  -0.213  -0.165  -0.013  -0.134  0.040   0.066   0.035   0.034   -0.001  -0.0520.063   -0.007  -0.004  -0.002  -0.072  -0.006  0.013   -0.021  0.017   -0.023  0.001   0.025   0.015   0.030   0.034   0.025   0.0710.002    0.011   -0.026  0.023   -0.012
0.035   -0.017  -0.479  0.528   -0.292  -0.237  1.000   -0.109  -0.085  -0.024  0.457   -0.173  -0.161  -0.115  -0.109  0.026   0.133-0.084   0.018   -0.013  -0.015  0.072   0.038   0.039   0.000   -0.019  -0.024  0.063   -0.019  -0.021  -0.007  0.023   0.026   -0.0290.019   0.031   0.025   0.006   0.033
0.018   -0.024  0.039   -0.031  -0.263  -0.213  -0.109  1.000   -0.076  0.004   -0.059  0.076   -0.027  0.008   0.019   -0.039  0.057-0.023   0.003   0.014   0.018   -0.027  -0.028  -0.015  0.028   -0.005  -0.020  -0.050  -0.014  -0.022  -0.011  -0.025  -0.042  0.0080.022    -0.021  0.010   0.004   -0.001
0.018   -0.011  0.065   -0.064  -0.204  -0.165  -0.085  -0.076  1.000   0.023   -0.037  0.005   0.059   -0.011  0.018   -0.008  -0.034-0.006  -0.009  0.005   -0.025  0.038   -0.041  -0.008  0.065   -0.012  0.003   -0.022  -0.013  0.011   -0.020  -0.042  -0.029  -0.0080.032   -0.030  -0.017  -0.040  -0.012
-0.015  -0.022  0.016   -0.032  0.007   -0.013  -0.024  0.004   0.023   1.000   -0.005  0.010   0.068   -0.065  0.007   -0.034  -0.029-0.006  -0.008  -0.033  0.042   -0.017  -0.036  -0.002  0.001   0.018   0.033   -0.032  -0.039  -0.014  0.023   0.013   -0.047  -0.039-0.003  -0.030  -0.041  -0.027  -0.031
-0.012  -0.010  -0.733  0.809   -0.091  -0.134  0.457   -0.059  -0.037  -0.005  1.000   -0.266  -0.247  -0.177  -0.167  -0.146  -0.131-0.128  0.006   0.006   -0.006  0.053   -0.002  0.031   -0.024  -0.011  0.013   0.048   0.006   -0.041  -0.005  0.016   -0.012  0.0130.032    0.043   0.092   0.049   0.083
0.011   -0.004  0.362   -0.329  0.044   0.040   -0.173  0.076   0.005   0.010   -0.266  1.000   -0.230  -0.165  -0.156  -0.136  -0.122-0.119  -0.040  0.054   -0.054  0.001   -0.147  -0.011  0.002   0.048   0.021   -0.345  -0.044  0.019   -0.003  -0.012  -0.228  -0.052-0.059  -0.154  -0.131  -0.105  -0.128
-0.015  0.010   0.337   -0.305  0.044   0.066   -0.161  -0.027  0.059   0.068   -0.247  -0.230  1.000   -0.153  -0.145  -0.126  -0.113-0.111  -0.009  0.020   0.045   -0.064  -0.143  0.012   -0.002  -0.023  -0.016  -0.321  -0.021  0.011   -0.011  0.013   -0.215  0.054-0.028   -0.150  -0.131  -0.110  -0.107
0.001   0.010   0.241   -0.218  0.052   0.035   -0.115  0.008   -0.011  -0.065  -0.177  -0.165  -0.153  1.000   -0.103  -0.090  -0.081-0.079  0.003   -0.021  0.010   -0.005  0.050   0.012   0.059   -0.022  -0.014  0.056   0.010   0.030   0.004   0.008   0.064   -0.0140.002   0.032   0.068   -0.007  0.076
-0.016  0.008   0.228   -0.206  0.029   0.034   -0.109  0.019   0.018   0.007   -0.167  -0.156  -0.145  -0.103  1.000   -0.085  -0.077-0.075  0.005   -0.030  0.000   0.024   0.099   0.023   0.014   0.001   0.016   0.068   0.027   -0.001  -0.005  0.014   0.112   -0.012-0.026  0.070   0.055   0.076   0.039
0.027   -0.043  -0.071  0.035   -0.011  -0.001  0.026   -0.039  -0.008  -0.034  -0.146  -0.136  -0.126  -0.090  -0.085  1.000   -0.067-0.066  0.050   -0.055  0.011   0.028   0.294   -0.039  0.011   0.017   -0.006  0.620   0.042   0.032   0.026   -0.016  0.466   0.0030.005    0.331   0.167   0.224   0.165
-0.025  0.055   -0.336  0.371   -0.043  -0.052  0.133   0.057   -0.034  -0.029  -0.131  -0.122  -0.113  -0.081  -0.077  -0.067  1.000-0.059   -0.024  0.072   -0.003  -0.091  -0.176  -0.016  0.003   -0.027  0.001   -0.202  -0.104  -0.006  -0.025  -0.048  -0.208  0.0400.045    -0.163  -0.150  -0.086  -0.169
0.035   -0.024  0.175   -0.158  0.018   0.063   -0.084  -0.023  -0.006  -0.006  -0.128  -0.119  -0.111  -0.079  -0.075  -0.066  -0.0591.000   0.008   -0.042  -0.002  0.050   0.186   -0.022  -0.049  0.015   -0.006  0.486   0.098   -0.036  -0.005  0.016   0.312   -0.0050.034   0.154   0.136   0.074   0.131
0.056   -0.031  -0.020  0.005   -0.018  -0.007  0.018   0.003   -0.009  -0.008  0.006   -0.040  -0.009  0.003   0.005   0.050   -0.0240.008   1.000   -0.630  0.014   -0.002  0.084   0.030   -0.022  0.028   -0.010  0.057   -0.016  0.010   -0.043  0.226   0.054   -0.030-0.006  0.045   0.065   0.054   0.033
-0.021  0.028   -0.010  0.033   0.021   -0.004  -0.013  0.014   0.005   -0.033  0.006   0.054   0.020   -0.021  -0.030  -0.055  0.072-0.042   -0.630  1.000   0.006   0.004   -0.119  -0.027  0.009   -0.045  0.025   -0.089  -0.019  -0.001  0.041   -0.639  -0.090  0.0240.015    -0.071  -0.086  -0.053  -0.048
0.001   -0.029  0.003   -0.006  0.014   -0.002  -0.015  0.018   -0.025  0.042   -0.006  -0.054  0.045   0.010   0.000   0.011   -0.003-0.002  0.014   0.006   1.000   0.020   -0.028  -0.026  -0.070  0.004   -0.025  -0.006  0.021   -0.004  -0.048  0.000   -0.013  0.0790.027    0.012   0.030   0.012   0.042
0.004   -0.008  -0.019  0.014   0.013   -0.072  0.072   -0.027  0.038   -0.017  0.053   0.001   -0.064  -0.005  0.024   0.028   -0.0910.050   -0.002  0.004   0.020   1.000   0.208   0.021   -0.027  0.042   -0.011  0.095   0.126   -0.025  -0.009  0.018   0.148   -0.0250.010   0.069   0.060   0.054   0.069
0.029   -0.025  0.018   -0.028  0.017   -0.006  0.038   -0.028  -0.041  -0.036  -0.002  -0.147  -0.143  0.050   0.099   0.294   -0.1760.186   0.084   -0.119  -0.028  0.208   1.000   -0.002  0.010   0.030   -0.005  0.498   0.300   0.002   0.054   0.038   0.680   -0.020-0.021  0.311   0.213   0.217   0.202
-0.020  0.005   -0.008  0.014   -0.024  0.013   0.039   -0.015  -0.008  -0.002  0.031   -0.011  0.012   0.012   0.023   -0.039  -0.016-0.022  0.030   -0.027  -0.026  0.021   -0.002  1.000   -0.016  0.009   -0.004  -0.017  -0.029  0.027   0.007   0.045   0.005   -0.037-0.027  0.010   0.019   0.010   0.014
0.008   -0.013  0.028   -0.026  -0.025  -0.021  0.000   0.028   0.065   0.001   -0.024  0.002   -0.002  0.059   0.014   0.011   0.003-0.049   -0.022  0.009   -0.070  -0.027  0.010   -0.016  1.000   -0.008  -0.007  -0.006  0.013   -0.030  0.008   0.003   -0.003  -0.0190.028   0.001   0.018   0.016   -0.005
0.027   0.004   0.023   -0.026  0.003   0.017   -0.019  -0.005  -0.012  0.018   -0.011  0.048   -0.023  -0.022  0.001   0.017   -0.0270.015   0.028   -0.045  0.004   0.042   0.030   0.009   -0.008  1.000   -0.021  -0.015  0.015   -0.029  0.034   0.022   -0.006  -0.015-0.015  -0.021  0.009   -0.024  0.026
-0.037  0.027   -0.003  0.013   0.052   -0.023  -0.024  -0.020  0.003   0.033   0.013   0.021   -0.016  -0.014  0.016   -0.006  0.001-0.006   -0.010  0.025   -0.025  -0.011  -0.005  -0.004  -0.007  -0.021  1.000   -0.007  -0.056  0.002   -0.012  0.011   -0.020  -0.006-0.019  -0.004  -0.002  -0.018  -0.028
0.039   -0.032  -0.065  0.064   -0.007  0.001   0.063   -0.050  -0.022  -0.032  0.048   -0.345  -0.321  0.056   0.068   0.620   -0.2020.486   0.057   -0.089  -0.006  0.095   0.498   -0.017  -0.006  -0.015  -0.007  1.000   0.150   -0.017  0.026   0.005   0.773   -0.0220.031   0.514   0.364   0.345   0.344
0.032   -0.040  0.022   -0.032  -0.006  0.025   -0.019  -0.014  -0.013  -0.039  0.006   -0.044  -0.021  0.010   0.027   0.042   -0.1040.098   -0.016  -0.019  0.021   0.126   0.300   -0.029  0.013   0.015   -0.056  0.150   1.000   -0.014  0.053   0.030   0.238   -0.066-0.008  -0.118  -0.091  -0.037  -0.110
-0.026  0.016   0.033   -0.031  0.011   0.015   -0.021  -0.022  0.011   -0.014  -0.041  0.019   0.011   0.030   -0.001  0.032   -0.006-0.036  0.010   -0.001  -0.004  -0.025  0.002   0.027   -0.030  -0.029  0.002   -0.017  -0.014  1.000   -0.031  0.004   0.007   -0.0160.003   0.003   0.035   0.018   0.023
-0.039  0.029   -0.005  -0.010  -0.020  0.030   -0.007  -0.011  -0.020  0.023   -0.005  -0.003  -0.011  0.004   -0.005  0.026   -0.025-0.005  -0.043  0.041   -0.048  -0.009  0.054   0.007   0.008   0.034   -0.012  0.026   0.053   -0.031  1.000   -0.046  0.024   0.0020.020    0.019   -0.015  0.033   -0.001
-0.005  -0.016  0.017   -0.016  -0.018  0.034   0.023   -0.025  -0.042  0.013   0.016   -0.012  0.013   0.008   0.014   -0.016  -0.0480.016   0.226   -0.639  0.000   0.018   0.038   0.045   0.003   0.022   0.011   0.005   0.030   0.004   -0.046  1.000   0.010   0.0110.004    0.015   0.051   0.014   0.025
0.030   -0.012  0.011   -0.015  -0.004  0.025   0.026   -0.042  -0.029  -0.047  -0.012  -0.228  -0.215  0.064   0.112   0.466   -0.2080.312   0.054   -0.090  -0.013  0.148   0.680   0.005   -0.003  -0.006  -0.020  0.773   0.238   0.007   0.024   0.010   1.000   -0.0360.001   0.628   0.460   0.405   0.459
0.008   0.006   -0.007  0.025   -0.039  0.071   -0.029  0.008   -0.008  -0.039  0.013   -0.052  0.054   -0.014  -0.012  0.003   0.040-0.005   -0.030  0.024   0.079   -0.025  -0.020  -0.037  -0.019  -0.015  -0.006  -0.022  -0.066  -0.016  0.002   0.011   -0.036  1.0000.028    0.004   -0.006  -0.002  -0.004
-0.013  0.010   -0.070  0.051   -0.040  0.002   0.019   0.022   0.032   -0.003  0.032   -0.059  -0.028  0.002   -0.026  0.005   0.0450.034    -0.006  0.015   0.027   0.010   -0.021  -0.027  0.028   -0.015  -0.019  0.031   -0.008  0.003   0.020   0.004   0.001   0.0281.000    0.012   0.050   0.009   0.003
-0.016  0.013   -0.032  0.030   -0.002  0.011   0.031   -0.021  -0.030  -0.030  0.043   -0.154  -0.150  0.032   0.070   0.331   -0.1630.154   0.045   -0.071  0.012   0.069   0.311   0.010   0.001   -0.021  -0.004  0.514   -0.118  0.003   0.019   0.015   0.628   0.0040.012    1.000   0.759   0.618   0.769
-0.009  0.002   -0.028  0.047   0.018   -0.026  0.025   0.010   -0.017  -0.041  0.092   -0.131  -0.131  0.068   0.055   0.167   -0.1500.136   0.065   -0.086  0.030   0.060   0.213   0.019   0.018   0.009   -0.002  0.364   -0.091  0.035   -0.015  0.051   0.460   -0.0060.050   0.759   1.000   0.548   0.714
-0.034  0.023   -0.021  0.034   -0.002  0.023   0.006   0.004   -0.040  -0.027  0.049   -0.105  -0.110  -0.007  0.076   0.224   -0.0860.074   0.054   -0.053  0.012   0.054   0.217   0.010   0.016   -0.024  -0.018  0.345   -0.037  0.018   0.033   0.014   0.405   -0.0020.009   0.618   0.548   1.000   0.510
-0.022  0.013   -0.015  0.027   0.004   -0.012  0.033   -0.001  -0.012  -0.031  0.083   -0.128  -0.107  0.076   0.039   0.165   -0.1690.131   0.033   -0.048  0.042   0.069   0.202   0.014   -0.005  0.026   -0.028  0.344   -0.110  0.023   -0.001  0.025   0.459   -0.0040.003   0.769   0.714   0.510   1.000

//


// ----- building the logistic regression model

import org.apache.spark.ml.feature.StandardScaler
val stdScaler = new StandardScaler().
setWithStd(true).
setWithMean(true).
setInputCol("features").
setOutputCol("scaledFeatures")

import org.apache.spark.ml.classification.LogisticRegression
val lr = new LogisticRegression
lr.setRegParam(0.01).setMaxIter(500).setFitIntercept(true).setFeaturesCol("scaledFeatures")

import org.apache.spark.ml.Pipeline
val pipeline = new Pipeline().setStages(Array(dfInd1,dfInd2,dfInd3,dfInd4,dfInd5,dfInd6,dfInd7,dfInd8,dfOne1,dfOne2,dfOne3,dfOne4,dfOne5,dfOne6,dfOne7,va,stdScaler,lr))

val Array(trainingData, testData) = df1.randomSplit(Array(0.7,0.3),11L)

trainingData.cache
testData.cache

val model = pipeline.fit(trainingData)

-- collecting feature importance

import org.apache.spark.ml.classification.LogisticRegressionModel

val lrmodel = model.stages.last.asInstanceOf[LogisticRegressionModel]

val featureImp = va.getInputCols.zip(lrmodel.coefficients.toArray)

val columns = Array("feature", "Importance")
val featureImpDF = spark.createDataFrame(featureImp).toDF(columns: _*)

featureImpDF.orderBy($"Importance".desc).show()
+--------------------+--------------------+
|             feature|          Importance|
+--------------------+--------------------+
|      DepartmentVect|  0.4006980957476677|
|TrainingTimesLast...|  0.3478742547004321|
|YearsSinceLastPro...| 0.31594764598965625|
|     JobSatisfaction|  0.2142751877573796|
|  BusinessTravelVect|   0.190740700460595|
|           Education|  0.1633728339245719|
|    DistanceFromHome| 0.09933062014386512|
|RelationshipSatis...| 0.08079005808935272|
|        OverTimeVect| 0.06565258147477587|
|   TotalWorkingYears|0.038705647977902206|
|      YearsAtCompany|-0.00628640481844...|
|          GenderVect|-0.04750907725296413|
|EnvironmentSatisf...|-0.06766099076595236|
|                 Age|-0.06818883668749375|
|   PerformanceRating|-0.08054173425235191|
|         JobRoleVect|-0.09817173804683516|
|   MaritalStatusVect| -0.1020786372569186|
|      JobInvolvement| -0.1395902928298467|
|       MonthlyIncome|-0.19846820544606547|
|  EducationFieldVect| -0.2135723409061456|
+--------------------+--------------------+
only showing top 20 rows


import org.apache.spark.ml.classification.BinaryLogisticRegressionSummary

val trainingSummary = lrmodel.summary

trainingSummary.objectiveHistory
res8: Array[Double] = Array(0.44565090460475837, 0.39760280852412105, 0.34766922202843487, 0.3340294392473882, 0.32679182495681036, 0.3210631757299991, 0.32035487725657646, 0.31978181790479465, 0.31964978458433685, 0.3195201956931884, 0.3194591855601846, 0.31944277744049465, 0.31942943273906466, 0.3194277675280685, 0.31942495654663006, 0.3194246661207979, 0.319424325398952, 0.31942397391516497, 0.3194238086558894, 0.31942375275699436, 0.3194236805005226, 0.31942365237205844, 0.3194236381033164, 0.3194236356434643, 0.31942363442130434, 0.31942363329406737, 0.31942363309171246, 0.31942363277897645, 0.31942363272171737, 0.3194236326527717, 0.3194236326010285, 0.3194236325805736, 0.3194236325745635, 0.3194236325730067, 0.3194236325698727, 0.31942363256959166, 0.31942363256811934)

val binarySummary = trainingSummary.asInstanceOf[BinaryLogisticRegressionSummary]

binarySummary.areaUnderROC
res9: Double = 0.8594584286803965

binarySummary.accuracy
res10: Double = 0.8899521531100478


-- collecting metric performance

val pred = model.transform(testData)

import org.apache.spark.ml.evaluation.BinaryClassificationEvaluator
val bceval = new BinaryClassificationEvaluator()

bceval.setMetricName("areaUnderROC").evaluate(pred)
res11: Double = 0.8670549506204108

bceval.setMetricName("areaUnderPR").evaluate(pred)
res12: Double = 0.6971381355561594


val validPredicts = pred.select("label","prediction").rdd.map( row => (row.getDouble(0),row.getDouble(1)) )

import org.apache.spark.mllib.evaluation.MulticlassMetrics
val metrics = new MulticlassMetrics(validPredicts)

metrics.confusionMatrix
res13: org.apache.spark.mllib.linalg.Matrix =
354.0  36.0
5.0    30.0

-------------------

import org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}

val paramGrid = new ParamGridBuilder().
addGrid(lr.regParam, Array(0.1, 0.01, 0.001)).
addGrid(lr.fitIntercept).
addGrid(lr.maxIter, Array(100,300,500)).build()

import org.apache.spark.ml.evaluation.BinaryClassificationEvaluator

val cv = new CrossValidator().
setEstimator(pipeline).
setEvaluator(new BinaryClassificationEvaluator).
setEstimatorParamMaps(paramGrid).
setNumFolds(3)

val cvmodel = cv.fit(trainingData)

-- CV hyperparameter evaluation

cvmodel.getEstimatorParamMaps.zip(cvmodel.avgMetrics)
res14: Array[(org.apache.spark.ml.param.ParamMap, Double)] =
Array(({
        logreg_925172a435d6-fitIntercept: true,
        logreg_925172a435d6-maxIter: 100,
        logreg_925172a435d6-regParam: 0.1
},0.8065361547871763), ({
        logreg_925172a435d6-fitIntercept: false,
        logreg_925172a435d6-maxIter: 100,
        logreg_925172a435d6-regParam: 0.1
},0.8068163435712505), ({
        logreg_925172a435d6-fitIntercept: true,
        logreg_925172a435d6-maxIter: 100,
        logreg_925172a435d6-regParam: 0.01
},0.8108196252090215), ({
        logreg_925172a435d6-fitIntercept: false,
        logreg_925172a435d6-maxIter: 100,
        logreg_925172a435d6-regParam: 0.01
},0.8084765045488519), ({
        logreg_925172a435d6-fitIntercept: true,
        logreg_925172a435d6-maxIter: 100,
        logreg_925172a435d6-regParam: 0.001
},0.8049053690995266), ({
        logreg_925172a435d6-fitIntercept: f...


-- extract best LR model 

import org.apache.spark.ml.PipelineModel
val bestmodel = cvmodel.bestModel.asInstanceOf[PipelineModel]

import org.apache.spark.ml.classification.LogisticRegressionModel
val lrmodel = bestmodel.stages.last.asInstanceOf[LogisticRegressionModel]

lrmodel.getRegParam
res1: Double = 0.01

lrmodel.getMaxIter
res2: Int = 100

lrmodel.getThreshold
res3: Double = 0.5

lrmodel.getFitIntercept
res4: Boolean = true

lrmodel.getStandardization
res5: Boolean = true

-- collecting feature importance

val featureImp = va.getInputCols.zip(lrmodel.coefficients.toArray)

val columns = Array("feature", "Importance")
val featureImpDF = spark.createDataFrame(featureImp).toDF(columns: _*)

featureImpDF.orderBy($"Importance".desc).show()
+--------------------+--------------------+
|             feature|          Importance|
+--------------------+--------------------+
|      DepartmentVect|  0.4006980957476677|
|TrainingTimesLast...|  0.3478742547004321|
|YearsSinceLastPro...| 0.31594764598965625|
|     JobSatisfaction|  0.2142751877573796|
|  BusinessTravelVect|   0.190740700460595|
|           Education|  0.1633728339245719|
|    DistanceFromHome| 0.09933062014386512|
|RelationshipSatis...| 0.08079005808935272|
|        OverTimeVect| 0.06565258147477587|
|   TotalWorkingYears|0.038705647977902206|
|      YearsAtCompany|-0.00628640481844...|
|          GenderVect|-0.04750907725296413|
|EnvironmentSatisf...|-0.06766099076595236|
|                 Age|-0.06818883668749375|
|   PerformanceRating|-0.08054173425235191|
|         JobRoleVect|-0.09817173804683516|
|   MaritalStatusVect| -0.1020786372569186|
|      JobInvolvement| -0.1395902928298467|
|       MonthlyIncome|-0.19846820544606547|
|  EducationFieldVect| -0.2135723409061456|
+--------------------+--------------------+
only showing top 20 rows


import org.apache.spark.ml.classification.BinaryLogisticRegressionSummary

val trainingSummary = lrmodel.summary

trainingSummary.objectiveHistory
res21: Array[Double] = Array(0.44565090460475837, 0.39760280852412105, 0.34766922202843487, 0.3340294392473882, 0.32679182495681036, 0.3210631757299991, 0.32035487725657646, 0.31978181790479465, 0.31964978458433685, 0.3195201956931884, 0.3194591855601846, 0.31944277744049465, 0.31942943273906466, 0.3194277675280685, 0.31942495654663006, 0.3194246661207979, 0.319424325398952, 0.31942397391516497, 0.3194238086558894, 0.31942375275699436, 0.3194236805005226, 0.31942365237205844, 0.3194236381033164, 0.3194236356434643, 0.31942363442130434, 0.31942363329406737, 0.31942363309171246, 0.31942363277897645, 0.31942363272171737, 0.3194236326527717, 0.3194236326010285, 0.3194236325805736, 0.3194236325745635, 0.3194236325730067, 0.3194236325698727, 0.31942363256959166, 0.31942363256811934)

val binarySummary = trainingSummary.asInstanceOf[BinaryLogisticRegressionSummary]

binarySummary.areaUnderROC
res22: Double = 0.8594584286803965

binarySummary.accuracy
res23: Double = 0.8899521531100478

-- collecting metric performance

val pred = bestmodel.transform(testData)

val bceval = new BinaryClassificationEvaluator()

bceval.setMetricName("areaUnderROC").evaluate(pred)
res24: Double = 0.8670549506204108

bceval.setMetricName("areaUnderPR").evaluate(pred)
res25: Double = 0.6971381355561594


val validPredicts = pred.select("label","prediction").rdd.map( row => (row.getDouble(0),row.getDouble(1)) )

import org.apache.spark.mllib.evaluation.MulticlassMetrics
val metrics = new MulticlassMetrics(validPredicts)

metrics.confusionMatrix
res26: org.apache.spark.mllib.linalg.Matrix =
354.0  36.0
5.0    30.0
