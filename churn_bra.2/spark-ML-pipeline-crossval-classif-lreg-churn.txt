
val df = spark.read.format("csv").option("header","true").option("inferSchema","true").load("churn_bra/dados_clientes.csv")

df.printSchema
root
 |-- id: integer (nullable = true)
 |-- Churn: string (nullable = true)
 |-- Mais65anos: integer (nullable = true)
 |-- Conjuge: string (nullable = true)
 |-- Dependentes: string (nullable = true)
 |-- MesesDeContrato: integer (nullable = true)
 |-- TelefoneFixo: string (nullable = true)
 |-- MaisDeUmaLinhaTelefonica: string (nullable = true)
 |-- Internet: string (nullable = true)
 |-- SegurancaOnline: string (nullable = true)
 |-- BackupOnline: string (nullable = true)
 |-- SeguroDispositivo: string (nullable = true)
 |-- SuporteTecnico: string (nullable = true)
 |-- TVaCabo: string (nullable = true)
 |-- StreamingFilmes: string (nullable = true)
 |-- TipoContrato: string (nullable = true)
 |-- ContaCorreio: string (nullable = true)
 |-- MetodoPagamento: string (nullable = true)
 |-- MesesCobrados: double (nullable = true)
 
val df1 = df.drop("id")

df1.describe().show
+-------+-----+------------------+-------+-----------+------------------+------------+------------------------+--------+---------------+------------+-----------------+--------------+-------+---------------+------------+------------+---------------+------------------+-----+
|summary|Churn|        Mais65anos|Conjuge|Dependentes|   MesesDeContrato|TelefoneFixo|MaisDeUmaLinhaTelefonica|Internet|SegurancaOnline|BackupOnline|SeguroDispositivo|SuporteTecnico|TVaCabo|StreamingFilmes|TipoContrato|ContaCorreio|MetodoPagamento|     MesesCobrados|label|
+-------+-----+------------------+-------+-----------+------------------+------------+------------------------+--------+---------------+------------+-----------------+--------------+-------+---------------+------------+------------+---------------+------------------+-----+
|  count|10348|             10348|  10348|      10348|             10348|       10348|                   10348|   10348|          10348|       10348|            10348|         10348|  10348|          10348|       10348|       10348|          10348|             10348|10348|
|   mean| null|0.1409934286818709|   null|       null|27.518554310011595|        null|                    null|    null|           null|        null|             null|          null|   null|           null|        null|        null|           null| 67.72477324116379| null|
| stddev| null|0.3480315890924261|   null|       null| 24.09778298180764|        null|                    null|    null|           null|        null|             null|          null|   null|           null|        null|        null|           null|28.859250112596182| null|
|    min|  Nao|                 0|    Nao|        Nao|                 0|         Nao|                     Nao|     DSL|            Nao|         Nao|              Nao|           Nao|    Nao|            Nao|    DoisAnos|         Nao|         Boleto|             18.25|  Nao|
|    max|  Sim|                 1|    Sim|        Sim|                72|         Sim|                     Sim|     Nao|            Sim|         Sim|              Sim|           Sim|    Sim|            Sim|       UmAno|         Sim|  DebitoEmConta|            118.75|  Sim|
+-------+-----+------------------+-------+-----------+------------------+------------+------------------------+--------+---------------+------------+-----------------+--------------+-------+---------------+------------+------------+---------------+------------------+-----+

df1.groupBy('TelefoneFixo,'MaisDeUmaLinhaTelefonica).count.show
+------------+------------------------+-----+
|TelefoneFixo|MaisDeUmaLinhaTelefonica|count|
+------------+------------------------+-----+
|         Sim|                     Sim| 4515|
|         Sim|                     Nao| 4848|
|         Nao|    SemServicoTelefonico|  985|
+------------+------------------------+-----+

df1.groupBy('Internet,'SegurancaOnline).count.show
+-----------+------------------+-----+
|   Internet|   SegurancaOnline|count|
+-----------+------------------+-----+
|FibraOptica|               Sim| 1006|
|        DSL|               Nao| 1889|
|FibraOptica|               Nao| 4395|
|        Nao|SemServicoInternet| 1741|
|        DSL|               Sim| 1317|
+-----------+------------------+-----+

df1.groupBy('Internet,'BackupOnline).count.show
+-----------+------------------+-----+
|   Internet|      BackupOnline|count|
+-----------+------------------+-----+
|FibraOptica|               Sim| 2069|
|        DSL|               Nao| 1965|
|FibraOptica|               Nao| 3332|
|        Nao|SemServicoInternet| 1741|
|        DSL|               Sim| 1241|
+-----------+------------------+-----+

df1.groupBy('Internet,'SeguroDispositivo).count.show
+-----------+------------------+-----+
|   Internet| SeguroDispositivo|count|
+-----------+------------------+-----+
|FibraOptica|               Sim| 2072|
|        DSL|               Nao| 1962|
|FibraOptica|               Nao| 3329|
|        Nao|SemServicoInternet| 1741|
|        DSL|               Sim| 1244|
+-----------+------------------+-----+

df1.groupBy('Internet,'SuporteTecnico).count.show
+-----------+------------------+-----+
|   Internet|    SuporteTecnico|count|
+-----------+------------------+-----+
|FibraOptica|               Sim| 1081|
|        DSL|               Nao| 1882|
|FibraOptica|               Nao| 4320|
|        Nao|SemServicoInternet| 1741|
|        DSL|               Sim| 1324|
+-----------+------------------+-----+

df1.groupBy('Internet,'TVaCabo).count.show
+-----------+------------------+-----+
|   Internet|           TVaCabo|count|
+-----------+------------------+-----+
|FibraOptica|               Sim| 2994|
|        DSL|               Nao| 2052|
|FibraOptica|               Nao| 2407|
|        Nao|SemServicoInternet| 1741|
|        DSL|               Sim| 1154|
+-----------+------------------+-----+

df1.groupBy('Internet,'StreamingFilmes).count.show
+-----------+------------------+-----+
|   Internet|   StreamingFilmes|count|
+-----------+------------------+-----+
|FibraOptica|               Sim| 2970|
|        DSL|               Nao| 2014|
|FibraOptica|               Nao| 2431|
|        Nao|SemServicoInternet| 1741|
|        DSL|               Sim| 1192|
+-----------+------------------+-----+

import org.apache.spark.ml.feature.{StringIndexer, OneHotEncoder, VectorAssembler}

val dfrawIndexer0 = new StringIndexer().setInputCol("Churn").setOutputCol("label")
val df2 = dfrawIndexer0.fit(df1).transform(df1)

val dfrawIndexer1 = new StringIndexer().setInputCol("Conjuge").setOutputCol("ConjugeCat")
val dfrawIndexer2 = new StringIndexer().setInputCol("Dependentes").setOutputCol("DependentesCat")
val dfrawIndexer3 = new StringIndexer().setInputCol("TelefoneFixo").setOutputCol("TelefoneFixoCat")
val dfrawIndexer4 = new StringIndexer().setInputCol("MaisDeUmaLinhaTelefonica").setOutputCol("MaisDeUmaLinhaCat")
val dfrawIndexer5 = new StringIndexer().setInputCol("Internet").setOutputCol("InternetCat")
val dfrawIndexer6 = new StringIndexer().setInputCol("SegurancaOnline").setOutputCol("SegurancaOnlineCat")
val dfrawIndexer7 = new StringIndexer().setInputCol("BackupOnline").setOutputCol("BackupOnlineCat")
val dfrawIndexer8 = new StringIndexer().setInputCol("SeguroDispositivo").setOutputCol("SeguroDispositivoCat")
val dfrawIndexer9 = new StringIndexer().setInputCol("SuporteTecnico").setOutputCol("SuporteTecnicoCat")
val dfrawIndexer10 = new StringIndexer().setInputCol("TVaCabo").setOutputCol("TVaCaboCat")
val dfrawIndexer11 = new StringIndexer().setInputCol("StreamingFilmes").setOutputCol("StreamingFilmesCat")
val dfrawIndexer12 = new StringIndexer().setInputCol("TipoContrato").setOutputCol("TipoContratoCat")
val dfrawIndexer13 = new StringIndexer().setInputCol("ContaCorreio").setOutputCol("ContaCorreioCat")
val dfrawIndexer14 = new StringIndexer().setInputCol("MetodoPagamento").setOutputCol("MetodoPagamentoCat")

val dfrawIndexer41 = new OneHotEncoder().setInputCol("MaisDeUmaLinhaCat").setOutputCol("MaisDeUmaLinhaVect")
val dfrawIndexer51 = new OneHotEncoder().setInputCol("InternetCat").setOutputCol("InternetVect")
val dfrawIndexer61 = new OneHotEncoder().setInputCol("SegurancaOnlineCat").setOutputCol("SegurancaOnlineVect")
val dfrawIndexer71 = new OneHotEncoder().setInputCol("BackupOnlineCat").setOutputCol("BackupOnlineVect")
val dfrawIndexer81 = new OneHotEncoder().setInputCol("SeguroDispositivoCat").setOutputCol("SeguroDispositivoVect")
val dfrawIndexer91 = new OneHotEncoder().setInputCol("SuporteTecnicoCat").setOutputCol("SuporteTecnicoVect")
val dfrawIndexer101 = new OneHotEncoder().setInputCol("TVaCaboCat").setOutputCol("TVaCaboVect")
val dfrawIndexer111 = new OneHotEncoder().setInputCol("StreamingFilmesCat").setOutputCol("StreamingFilmesVect")
val dfrawIndexer121 = new OneHotEncoder().setInputCol("TipoContratoCat").setOutputCol("TipoContratoVect")
val dfrawIndexer141 = new OneHotEncoder().setInputCol("MetodoPagamentoCat").setOutputCol("MetodoPagamentoVect")

// Conjuge,Dependentes,TelefoneFixo,MaisDeUmaLinhaTelefonica,Internet,SegurancaOnline,BackupOnline,SeguroDispositivo,SuporteTecnico,TVaCabo,StreamingFilmes,TipoContrato,ContaCorreio,MetodoPagamento,Mais65anos,MesesDeContrato,MesesCobrados
val va = new VectorAssembler().setOutputCol("features").setInputCols(Array("ConjugeCat","DependentesCat","TelefoneFixoCat","MaisDeUmaLinhaVect","InternetVect","SegurancaOnlineVect","BackupOnlineVect","SeguroDispositivoVect","SuporteTecnicoVect","TVaCaboVect","StreamingFilmesVect","TipoContratoVect","ContaCorreioCat","MetodoPagamentoVect","Mais65anos","MesesDeContrato","MesesCobrados"))

import org.apache.spark.ml.Pipeline
val pipeline = new Pipeline().setStages(Array(dfrawIndexer1,dfrawIndexer2,dfrawIndexer3,dfrawIndexer4,dfrawIndexer5,dfrawIndexer6,dfrawIndexer7,dfrawIndexer8,dfrawIndexer9,dfrawIndexer10,dfrawIndexer11,dfrawIndexer12,dfrawIndexer13,dfrawIndexer14,dfrawIndexer41,dfrawIndexer51,dfrawIndexer61,dfrawIndexer71,dfrawIndexer81,dfrawIndexer91,dfrawIndexer101,dfrawIndexer111,dfrawIndexer121,dfrawIndexer141,va))

val df3 = pipeline.fit(df2).transform(df2)

df3.printSchema
root
 |-- Churn: string (nullable = true)
 |-- Mais65anos: integer (nullable = true)
 |-- Conjuge: string (nullable = true)
 |-- Dependentes: string (nullable = true)
 |-- MesesDeContrato: integer (nullable = true)
 |-- TelefoneFixo: string (nullable = true)
 |-- MaisDeUmaLinhaTelefonica: string (nullable = true)
 |-- Internet: string (nullable = true)
 |-- SegurancaOnline: string (nullable = true)
 |-- BackupOnline: string (nullable = true)
 |-- SeguroDispositivo: string (nullable = true)
 |-- SuporteTecnico: string (nullable = true)
 |-- TVaCabo: string (nullable = true)
 |-- StreamingFilmes: string (nullable = true)
 |-- TipoContrato: string (nullable = true)
 |-- ContaCorreio: string (nullable = true)
 |-- MetodoPagamento: string (nullable = true)
 |-- MesesCobrados: double (nullable = true)
 |-- label: double (nullable = false)
 |-- ConjugeCat: double (nullable = false)
 |-- DependentesCat: double (nullable = false)
 |-- TelefoneFixoCat: double (nullable = false)
 |-- MaisDeUmaLinhaCat: double (nullable = false)
 |-- InternetCat: double (nullable = false)
 |-- SegurancaOnlineCat: double (nullable = false)
 |-- BackupOnlineCat: double (nullable = false)
 |-- SeguroDispositivoCat: double (nullable = false)
 |-- SuporteTecnicoCat: double (nullable = false)
 |-- TVaCaboCat: double (nullable = false)
 |-- StreamingFilmesCat: double (nullable = false)
 |-- TipoContratoCat: double (nullable = false)
 |-- ContaCorreioCat: double (nullable = false)
 |-- MetodoPagamentoCat: double (nullable = false)
 |-- MaisDeUmaLinhaVect: vector (nullable = true)
 |-- InternetVect: vector (nullable = true)
 |-- SegurancaOnlineVect: vector (nullable = true)
 |-- BackupOnlineVect: vector (nullable = true)
 |-- SeguroDispositivoVect: vector (nullable = true)
 |-- SuporteTecnicoVect: vector (nullable = true)
 |-- TVaCaboVect: vector (nullable = true)
 |-- StreamingFilmesVect: vector (nullable = true)
 |-- TipoContratoVect: vector (nullable = true)
 |-- MetodoPagamentoVect: vector (nullable = true)
 |-- features: vector (nullable = true)

 
df3.show(10)
+-----+----------+-------+-----------+---------------+------------+------------------------+-----------+---------------+------------+-----------------+--------------+-------+---------------+------------+------------+----------------+-------------+-----+----------+--------------+---------------+-----------------+-----------+------------------+---------------+--------------------+-----------------+----------+------------------+---------------+---------------+------------------+------------------+-------------+-------------------+----------------+---------------------+------------------+-------------+-------------------+----------------+-------------------+--------------------+
|Churn|Mais65anos|Conjuge|Dependentes|MesesDeContrato|TelefoneFixo|MaisDeUmaLinhaTelefonica|   Internet|SegurancaOnline|BackupOnline|SeguroDispositivo|SuporteTecnico|TVaCabo|StreamingFilmes|TipoContrato|ContaCorreio| MetodoPagamento|MesesCobrados|label|ConjugeCat|DependentesCat|TelefoneFixoCat|MaisDeUmaLinhaCat|InternetCat|SegurancaOnlineCat|BackupOnlineCat|SeguroDispositivoCat|SuporteTecnicoCat|TVaCaboCat|StreamingFilmesCat|TipoContratoCat|ContaCorreioCat|MetodoPagamentoCat|MaisDeUmaLinhaVect| InternetVect|SegurancaOnlineVect|BackupOnlineVect|SeguroDispositivoVect|SuporteTecnicoVect|  TVaCaboVect|StreamingFilmesVect|TipoContratoVect|MetodoPagamentoVect|            features|
+-----+----------+-------+-----------+---------------+------------+------------------------+-----------+---------------+------------+-----------------+--------------+-------+---------------+------------+------------+----------------+-------------+-----+----------+--------------+---------------+-----------------+-----------+------------------+---------------+--------------------+-----------------+----------+------------------+---------------+---------------+------------------+------------------+-------------+-------------------+----------------+---------------------+------------------+-------------+-------------------+----------------+-------------------+--------------------+
|  Nao|         0|    Sim|        Nao|              1|         Nao|    SemServicoTelefonico|        DSL|            Nao|         Sim|              Nao|           Nao|    Nao|            Nao| Mensalmente|         Sim|BoletoEletronico|        29.85|  0.0|       1.0|           0.0|            1.0|              2.0|        1.0|               0.0|            1.0|                 0.0|              0.0|       0.0|               0.0|            0.0|            0.0|               0.0|         (2,[],[])|(2,[1],[1.0])|      (2,[0],[1.0])|   (2,[1],[1.0])|        (2,[0],[1.0])|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|      (3,[0],[1.0])|(28,[0,2,6,7,10,1...|
|  Nao|         0|    Nao|        Nao|             34|         Sim|                     Nao|        DSL|            Sim|         Nao|              Sim|           Nao|    Nao|            Nao|       UmAno|         Nao|          Boleto|        56.95|  0.0|       0.0|           0.0|            0.0|              0.0|        1.0|               1.0|            0.0|                 1.0|              0.0|       0.0|               0.0|            2.0|            1.0|               1.0|     (2,[0],[1.0])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[0],[1.0])|        (2,[1],[1.0])|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|       (2,[],[])|      (3,[1],[1.0])|(28,[3,6,8,9,12,1...|
|  Sim|         0|    Nao|        Nao|              2|         Sim|                     Nao|        DSL|            Sim|         Sim|              Nao|           Nao|    Nao|            Nao| Mensalmente|         Sim|          Boleto|        53.85|  1.0|       0.0|           0.0|            0.0|              0.0|        1.0|               1.0|            1.0|                 0.0|              0.0|       0.0|               0.0|            0.0|            0.0|               1.0|     (2,[0],[1.0])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[1],[1.0])|        (2,[0],[1.0])|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|      (3,[1],[1.0])|(28,[3,6,8,10,11,...|
|  Nao|         0|    Nao|        Nao|             45|         Nao|    SemServicoTelefonico|        DSL|            Sim|         Nao|              Sim|           Sim|    Nao|            Nao|       UmAno|         Nao|   DebitoEmConta|         42.3|  0.0|       0.0|           0.0|            1.0|              2.0|        1.0|               1.0|            0.0|                 1.0|              1.0|       0.0|               0.0|            2.0|            1.0|               2.0|         (2,[],[])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[0],[1.0])|        (2,[1],[1.0])|     (2,[1],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|       (2,[],[])|      (3,[2],[1.0])|(28,[2,6,8,9,12,1...|
|  Sim|         0|    Nao|        Nao|              2|         Sim|                     Nao|FibraOptica|            Nao|         Nao|              Nao|           Nao|    Nao|            Nao| Mensalmente|         Sim|BoletoEletronico|         70.7|  1.0|       0.0|           0.0|            0.0|              0.0|        0.0|               0.0|            0.0|                 0.0|              0.0|       0.0|               0.0|            0.0|            0.0|               0.0|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|        (2,[0],[1.0])|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|      (3,[0],[1.0])|(28,[3,5,7,9,11,1...|
|  Sim|         0|    Nao|        Nao|              8|         Sim|                     Sim|FibraOptica|            Nao|         Nao|              Sim|           Nao|    Sim|            Sim| Mensalmente|         Sim|BoletoEletronico|        99.65|  1.0|       0.0|           0.0|            0.0|              1.0|        0.0|               0.0|            0.0|                 1.0|              0.0|       1.0|               1.0|            0.0|            0.0|               0.0|     (2,[1],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|        (2,[1],[1.0])|     (2,[0],[1.0])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[0],[1.0])|      (3,[0],[1.0])|(28,[4,5,7,9,12,1...|
|  Nao|         0|    Nao|        Sim|             22|         Sim|                     Sim|FibraOptica|            Nao|         Sim|              Nao|           Nao|    Sim|            Nao| Mensalmente|         Sim|   CartaoCredito|         89.1|  0.0|       0.0|           1.0|            0.0|              1.0|        0.0|               0.0|            1.0|                 0.0|              0.0|       1.0|               0.0|            0.0|            0.0|               3.0|     (2,[1],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[1],[1.0])|        (2,[0],[1.0])|     (2,[0],[1.0])|(2,[1],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|          (3,[],[])|(28,[1,4,5,7,10,1...|
|  Nao|         0|    Nao|        Nao|             10|         Nao|    SemServicoTelefonico|        DSL|            Sim|         Nao|              Nao|           Nao|    Nao|            Nao| Mensalmente|         Nao|          Boleto|        29.75|  0.0|       0.0|           0.0|            1.0|              2.0|        1.0|               1.0|            0.0|                 0.0|              0.0|       0.0|               0.0|            0.0|            1.0|               1.0|         (2,[],[])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[0],[1.0])|        (2,[0],[1.0])|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|      (3,[1],[1.0])|(28,[2,6,8,9,11,1...|
|  Sim|         0|    Sim|        Nao|             28|         Sim|                     Sim|FibraOptica|            Nao|         Nao|              Sim|           Sim|    Sim|            Sim| Mensalmente|         Sim|BoletoEletronico|        104.8|  1.0|       1.0|           0.0|            0.0|              1.0|        0.0|               0.0|            0.0|                 1.0|              1.0|       1.0|               1.0|            0.0|            0.0|               0.0|     (2,[1],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|   (2,[0],[1.0])|        (2,[1],[1.0])|     (2,[1],[1.0])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[0],[1.0])|      (3,[0],[1.0])|(28,[0,4,5,7,9,12...|
|  Nao|         0|    Nao|        Sim|             62|         Sim|                     Nao|        DSL|            Sim|         Sim|              Nao|           Nao|    Nao|            Nao|       UmAno|         Nao|   DebitoEmConta|        56.15|  0.0|       0.0|           1.0|            0.0|              0.0|        1.0|               1.0|            1.0|                 0.0|              0.0|       0.0|               0.0|            2.0|            1.0|               2.0|     (2,[0],[1.0])|(2,[1],[1.0])|      (2,[1],[1.0])|   (2,[1],[1.0])|        (2,[0],[1.0])|     (2,[0],[1.0])|(2,[0],[1.0])|      (2,[0],[1.0])|       (2,[],[])|      (3,[2],[1.0])|(28,[1,3,6,8,10,1...|

only showing top 10 rows


// calculate pearson correlation to check multicolinearity

import org.apache.spark.ml.stat.Correlation
import org.apache.spark.ml.linalg.Matrix
import org.apache.spark.sql.Row

val corr = Correlation.corr(df3, "features", "pearson").head match {
   case Row(coeff: Matrix) => coeff
}
1.0                    0.46090202325848095    ... (28 total)
0.46090202325848095    1.0                    ...
-0.022286127660715357  -0.01989414423979956   ...
-0.13770521829235824   0.048804966419336335   ...
0.15174829377230561    -0.03733525123020969   ...
0.01023030142880541    -0.1776543434205222    ...
-0.01910416850572813   0.06542267054782434    ...
-0.14303679558436863   -0.22269283176655796   ...
0.15849049581252758    0.12046866007274795    ...
-0.16260958245715226   -0.15220879258635073   ...
0.16628149761946467    0.03772072563247398    ...
-0.18031929389001466   -0.1619745491420988    ...
0.18517710103918597    0.04816807872266256    ...
-0.1272220558227519    -0.21332298597983204   ...
0.13878563452428613    0.10901813733131879  ...


corr.toDense.rowIter.foreach( x => println(x.toString))
[1.0,0.46090202325848095,-0.022286127660715357,-0.13770521829235824,0.15174829377230561,0.01023030142880541,-0.01910416850572813,-0.14303679558436863,0.15849049581252758,-0.16260958245715226,0.16628149761946467,-0.18031929389001466,0.18517710103918597,-0.1272220558227519,0.13878563452428613,-0.14370610483386453,0.13761230683471415,-0.1417668925764378,0.13552247828720856,-0.29647538610017204,0.2482792719936421,0.022346882422704294,-0.105072242659858,-0.0876443152388195,0.12955855384836767,0.043828888986343746,0.4093348866625381,0.11153756954766414]
[0.46090202325848095,1.0,-0.01989414423979956,0.048804966419336335,-0.03733525123020969,-0.1776543434205222,0.06542267054782434,-0.22269283176655796,0.12046866007274795,-0.15220879258635073,0.03772072563247398,-0.1619745491420988,0.04816807872266256,-0.21332298597983204,0.10901813733131879,-0.09848834434491292,-0.019828318186065366,-0.07274471771074814,-0.045844409686892636,-0.26807468381340693,0.23568915124238932,0.1402139620268743,-0.1984494386508594,0.08183804078236635,0.0807883564300133,-0.16545103037065537,0.19487689994931998,-0.11685961984121933]
[-0.022286127660715357,-0.01989414423979956,1.0,-0.3045163140893942,-0.2853602604187489,-0.3389040329910411,0.48410410743432913,0.05922943436053674,0.06146201392965775,0.08220792006050327,0.02889536111846792,0.056890989055180086,0.0559985293757761,0.06561609650281716,0.05307170146325128,0.09811990436764821,0.012203590330553678,0.09039644559826582,0.020031988166268697,0.006811319037727872,-0.00402157973732425,0.01208400096514165,0.017380250559384032,-1.8958091358526564E-4,-0.016799334572098992,-0.01691641905031552,-0.013962846549243499,-0.30473555440429956]
[-0.13770521829235824,0.048804966419336335,-0.3045163140893942,1.0,-0.8260053304216699,-0.1994083518782558,-0.027221388825807293,-0.1439602037872351,-0.10040081408739027,-0.01612667559097709,-0.22326139259066125,-0.015812055166558724,-0.22349101216117515,-0.1405375456704151,-0.10258297538579737,0.041052500963068575,-0.27042045581548424,0.05771824158732202,-0.2870790621977735,0.06429512964878145,-0.07535945712999825,0.16609912150099523,-0.12073704416061855,0.2356645351677315,-0.045557137461694555,-0.13106816775190744,-0.3111108018344265,-0.33602517800653986]
[0.15174829377230561,-0.03733525123020969,-0.2853602604187489,-0.8260053304216699,1.0,0.40119851903703246,-0.25908646709504723,0.1098038888542905,0.06465291358960669,-0.03242114559556331,0.20754808718496204,-0.017755994251788944,0.19174037099354765,0.10258056667008128,0.07181373208857834,-0.0993714805933463,0.26487755547799874,-0.11157019464434255,0.2770069915182452,-0.068724990627458,0.07820713021063357,-0.1742811854086873,0.11120152583842202,-0.2370153631680603,0.055781250405336366,0.14189242364204097,0.3213049434529996,0.5184436894672112]
[0.01023030142880541,-0.1776543434205222,-0.3389040329910411,-0.1994083518782558,0.40119851903703246,1.0,-0.7000643617489137,0.4417604891056981,-0.09572701458613979,0.21956285285921667,0.14159904758599343,0.21960788389150337,0.14147665986671965,0.4275391788079802,-0.07981603095117103,0.031130325353371558,0.3272587997333846,0.043377741983513435,0.3147254682204677,0.2648489298144377,-0.2298635859187708,-0.3561988988076038,0.38946541489184827,-0.34916520411627233,-0.05737977934763365,0.20317726659531196,-0.01167116413997102,0.8050157076062897]
[-0.01910416850572813,0.06542267054782434,0.48410410743432913,-0.027221388825807293,-0.25908646709504723,-0.7000643617489137,1.0,-0.024776268360999287,0.29916056005510194,0.13541343442634665,0.09655529853838275,0.1349327345648809,0.09702007153856158,-0.016842514201400403,0.28642351112697956,0.2829678051612203,-0.05591645905847612,0.26886530928795893,-0.04153864634227472,-0.09141815486795922,0.053418760192245326,0.09894952030676255,-0.14707172750845948,0.0867927912325516,0.02716562689051225,-0.10330040751658358,0.010767233825170246,-0.28045766590210036]
[-0.14303679558436863,-0.22269283176655796,0.05922943436053674,-0.1439602037872351,0.1098038888542905,0.4417604891056981,-0.024776268360999287,1.0,-0.6690265038287531,0.4047051987587939,0.01482582521745735,0.391885571984717,0.028539382451481896,0.5393857178594256,-0.13046727623911897,0.2426335522055958,0.18172424253782576,0.26051660453881964,0.16366450739003904,0.4509232019174722,-0.38468291372932834,-0.32423498658415917,0.4205180669690611,-0.23355124931776491,-0.14414007652562724,0.12793361694570957,-0.3041445331049295,0.3784137042727908]
[0.15849049581252758,0.12046866007274795,0.06146201392965775,-0.10040081408739027,0.06465291358960669,-0.09572701458613979,0.29916056005510194,-0.6690265038287531,1.0,-0.0607502506020243,0.259176523766702,-0.046224526593112054,0.24349424961387284,-0.1381395953592305,0.37458300668419836,0.06688558431204651,0.1171219588155072,0.04498768462431003,0.1391894864431055,-0.31201976890704286,0.2342601309587039,0.06272331457029533,-0.18892266576233976,-0.04846851006894465,0.13011941194038523,-0.020982052274337602,0.3539422691796265,0.21002070377726756]
[-0.16260958245715226,-0.15220879258635073,0.08220792006050327,-0.01612667559097709,-0.03242114559556331,0.21956285285921667,0.13541343442634665,0.4047051987587939,-0.0607502506020243,1.0,-0.7022886794367529,0.3788700625425571,-0.03662964912717122,0.4013405845437073,-0.05771280050416062,0.30705153246307426,0.04130143407326197,0.303719805883431,0.04476138665586635,0.36272073402898497,-0.29645078931988905,-0.1667315126835428,0.2884160907281316,-0.11875742281747703,-0.12570611335130735,0.046195714081608184,-0.3653204227263347,0.17549310707041207]
[0.16628149761946467,0.03772072563247398,0.02889536111846792,-0.22326139259066125,0.20754808718496204,0.14159904758599343,0.09655529853838275,0.01482582521745735,0.259176523766702,-0.7022886794367529,1.0,-0.03706462007333021,0.28695637633222093,0.011066893131526421,0.2603335957859831,-0.015184928547058154,0.2507799712828003,-0.01247935465432005,0.24790373119393916,-0.19571319885393607,0.1244876522567706,-0.10468912171111333,-0.037799799320112765,-0.16062154139949344,0.10019805501881152,0.06567279066986878,0.38968201333023134,0.39601121286126467]
[-0.18031929389001466,-0.1619745491420988,0.056890989055180086,-0.015812055166558724,-0.017755994251788944,0.21960788389150337,0.1349327345648809,0.391885571984717,-0.046224526593112054,0.3788700625425571,-0.03706462007333021,1.0,-0.7024092689444741,0.44062165282300325,-0.10375949258223531,0.4169721298136311,-0.07017793182069836,0.4171945488859238,-0.07020144359080703,0.406275260273069,-0.33717799301568857,-0.18672949901490474,0.26734284709088985,-0.1099333524404552,-0.11552272603900259,0.06277401278488605,-0.3461350933338505,0.14141721896330325]
[0.18517710103918597,0.04816807872266256,0.0559985293757761,-0.22349101216117515,0.19174037099354765,0.14147665986671965,0.09702007153856158,0.028539382451481896,0.24349424961387284,-0.03662964912717122,0.28695637633222093,-0.7024092689444741,1.0,-0.031027672815566516,0.309535568360633,-0.1329329355113705,0.3700748394327359,-0.13403574564894416,0.3709313479452234,-0.24228531827919567,0.1680633616410775,-0.08321242333670263,-0.015216448169622468,-0.1699934881413418,0.08924528989330197,0.047881407820172917,0.36895466287836626,0.4323184085062156]
[-0.1272220558227519,-0.21332298597983204,0.06561609650281716,-0.1405375456704151,0.10258056667008128,0.4275391788079802,-0.016842514201400403,0.5393857178594256,-0.1381395953592305,0.4013405845437073,0.011066893131526421,0.44062165282300325,-0.031027672815566516,1.0,-0.6730022112279851,0.3335314774720462,0.08286505006728061,0.327441459021943,0.08909682127266812,0.4845450707021862,-0.424473868398929,-0.28196986842822414,0.42041050967389904,-0.2341128097741256,-0.14756318586173467,0.14538132782793944,-0.30475481455745435,0.3315267572550316]
[0.13878563452428613,0.10901813733131879,0.05307170146325128,-0.10258297538579737,0.07181373208857834,-0.07981603095117103,0.28642351112697956,-0.13046727623911897,0.37458300668419836,-0.05771280050416062,0.2603335957859831,-0.10375949258223531,0.309535568360633,-0.6730022112279851,1.0,-0.04034665676839726,0.22967649876979035,-0.0342362427551265,0.22336490703030273,-0.3490276105708145,0.2791065386344989,0.014210964251233462,-0.1881712251268308,-0.046303486588214406,0.1330828657487687,-0.041477014843315174,0.3515599772093711,0.26037069117194445]
[-0.14370610483386453,-0.09848834434491292,0.09811990436764821,0.041052500963068575,-0.0993714805933463,0.031130325353371558,0.2829678051612203,0.2426335522055958,0.06688558431204651,0.30705153246307426,-0.015184928547058154,0.4169721298136311,-0.1329329355113705,0.3335314774720462,-0.04034665676839726,1.0,-0.711740187044816,0.5442792138060237,-0.2508961969674069,0.27897394552798865,-0.23326927873413947,-0.032294179501739316,0.07786579258518266,-0.01115387868907954,-0.05846370074610436,0.0315755308294077,-0.27600674165751105,-0.05588804770332371]
[0.13761230683471415,-0.019828318186065366,0.012203590330553678,-0.27042045581548424,0.26487755547799874,0.3272587997333846,-0.05591645905847612,0.18172424253782576,0.1171219588155072,0.04130143407326197,0.2507799712828003,-0.07017793182069836,0.3700748394327359,0.08286505006728061,0.22967649876979035,-0.711740187044816,1.0,-0.2520703175327557,0.5351216315285915,-0.09820046466753006,0.0518217012038024,-0.2370671805286461,0.17951926638268012,-0.26273035659702343,0.026222772462138104,0.0777163201840795,0.27716061918553986,0.6123755741896735]
[-0.1417668925764378,-0.07274471771074814,0.09039644559826582,0.05771824158732202,-0.11157019464434255,0.043377741983513435,0.26886530928795893,0.26051660453881964,0.04498768462431003,0.303719805883431,-0.01247935465432005,0.4171945488859238,-0.13403574564894416,0.327441459021943,-0.0342362427551265,0.5442792138060237,-0.2520703175327557,1.0,-0.7117796564160549,0.28919402157289087,-0.23420926505755027,-0.04025042176591062,0.09568361465278231,-0.007350744113966198,-0.06696124438137753,0.007451878462583938,-0.2834510064759104,-0.052360013234552166]
[0.13552247828720856,-0.045844409686892636,0.020031988166268697,-0.2870790621977735,0.2770069915182452,0.3147254682204677,-0.04153864634227472,0.16366450739003904,0.1391894864431055,0.04476138665586635,0.24790373119393916,-0.07020144359080703,0.3709313479452234,0.08909682127266812,0.22336490703030273,-0.2508961969674069,0.5351216315285915,-0.7117796564160549,1.0,-0.108354967880417,0.05265121589661849,-0.22891633064265368,0.16146253911985978,-0.2664284259139204,0.03476397316175273,0.10203890806352849,0.28441484066734213,0.6084527981341036]
[-0.29647538610017204,-0.26807468381340693,0.006811319037727872,0.06429512964878145,-0.068724990627458,0.2648489298144377,-0.09141815486795922,0.4509232019174722,-0.31201976890704286,0.36272073402898497,-0.19571319885393607,0.406275260273069,-0.24228531827919567,0.4845450707021862,-0.3490276105708145,0.27897394552798865,-0.09820046466753006,0.28919402157289087,-0.108354967880417,1.0,-0.6418322644128366,-0.21220224490327425,0.39136685456271286,-0.028726548298922263,-0.2262241048084691,0.07878357572149716,-0.663848709040495,0.07106434218740085]
[0.2482792719936421,0.23568915124238932,-0.00402157973732425,-0.07535945712999825,0.07820713021063357,-0.2298635859187708,0.053418760192245326,-0.38468291372932834,0.2342601309587039,-0.29645078931988905,0.1244876522567706,-0.33717799301568857,0.1680633616410775,-0.424473868398929,0.2791065386344989,-0.23326927873413947,0.0518217012038024,-0.23420926505755027,0.05265121589661849,-0.6418322644128366,1.0,0.18370742615294244,-0.3215673439113818,0.02337491077330155,0.194169600036105,-0.0738834913135802,0.5514746913687048,-0.09530247048355514]
[0.022346882422704294,0.1402139620268743,0.01208400096514165,0.16609912150099523,-0.1742811854086873,-0.3561988988076038,0.09894952030676255,-0.32423498658415917,0.06272331457029533,-0.1667315126835428,-0.10468912171111333,-0.18672949901490474,-0.08321242333670263,-0.28196986842822414,0.014210964251233462,-0.032294179501739316,-0.2370671805286461,-0.04025042176591062,-0.22891633064265368,-0.21220224490327425,0.18370742615294244,1.0,-0.2827751158572758,0.23474463523778538,0.06586754720134773,-0.12507931841020753,0.03246696710876828,-0.37546631089405097]
[-0.105072242659858,-0.1984494386508594,0.017380250559384032,-0.12073704416061855,0.11120152583842202,0.38946541489184827,-0.14707172750845948,0.4205180669690611,-0.18892266576233976,0.2884160907281316,-0.037799799320112765,0.26734284709088985,-0.015216448169622468,0.42041050967389904,-0.1881712251268308,0.07786579258518266,0.17951926638268012,0.09568361465278231,0.16146253911985978,0.39136685456271286,-0.3215673439113818,-0.2827751158572758,1.0,-0.4547876397680497,-0.4228515140303112,0.11450081385195449,-0.2522862985851081,0.3122070696408233]
[-0.0876443152388195,0.08183804078236635,-1.8958091358526564E-4,0.2356645351677315,-0.2370153631680603,-0.34916520411627233,0.0867927912325516,-0.23355124931776491,-0.04846851006894465,-0.11875742281747703,-0.16062154139949344,-0.1099333524404552,-0.1699934881413418,-0.2341128097741256,-0.046303486588214406,-0.01115387868907954,-0.26273035659702343,-0.007350744113966198,-0.2664284259139204,-0.028726548298922263,0.02337491077330155,0.23474463523778538,-0.4547876397680497,1.0,-0.22983904438760527,-0.13038049926494466,-0.19434579910469824,-0.4093999741559218]
[0.12955855384836767,0.0807883564300133,-0.016799334572098992,-0.045557137461694555,0.055781250405336366,-0.05737977934763365,0.02716562689051225,-0.14414007652562724,0.13011941194038523,-0.12570611335130735,0.10019805501881152,-0.11552272603900259,0.08924528989330197,-0.14756318586173467,0.1330828657487687,-0.05846370074610436,0.026222772462138104,-0.06696124438137753,0.03476397316175273,-0.2262241048084691,0.194169600036105,0.06586754720134773,-0.4228515140303112,-0.22983904438760527,1.0,-0.006481246711056858,0.267876451036201,0.011448668826979135]
[0.043828888986343746,-0.16545103037065537,-0.01691641905031552,-0.13106816775190744,0.14189242364204097,0.20317726659531196,-0.10330040751658358,0.12793361694570957,-0.020982052274337602,0.046195714081608184,0.06567279066986878,0.06277401278488605,0.047881407820172917,0.14538132782793944,-0.041477014843315174,0.0315755308294077,0.0777163201840795,0.007451878462583938,0.10203890806352849,0.07878357572149716,-0.0738834913135802,-0.12507931841020753,0.11450081385195449,-0.13038049926494466,-0.006481246711056858,1.0,0.05338246128582852,0.18403032749926967]
[0.4093348866625381,0.19487689994931998,-0.013962846549243499,-0.3111108018344265,0.3213049434529996,-0.01167116413997102,0.010767233825170246,-0.3041445331049295,0.3539422691796265,-0.3653204227263347,0.38968201333023134,-0.3461350933338505,0.36895466287836626,-0.30475481455745435,0.3515599772093711,-0.27600674165751105,0.27716061918553986,-0.2834510064759104,0.28441484066734213,-0.663848709040495,0.5514746913687048,0.03246696710876828,-0.2522862985851081,-0.19434579910469824,0.267876451036201,0.05338246128582852,1.0,0.22804476549823616]
[0.11153756954766414,-0.11685961984121933,-0.30473555440429956,-0.33602517800653986,0.5184436894672112,0.8050157076062897,-0.28045766590210036,0.3784137042727908,0.21002070377726756,0.17549310707041207,0.39601121286126467,0.14141721896330325,0.4323184085062156,0.3315267572550316,0.26037069117194445,-0.05588804770332371,0.6123755741896735,-0.052360013234552166,0.6084527981341036,0.07106434218740085,-0.09530247048355514,-0.37546631089405097,0.3122070696408233,-0.4093999741559218,0.011448668826979135,0.18403032749926967,0.22804476549823616,1.0]

corr.toDense.rowIter.foreach( x => {
  val size = x.size
  for ( i <- Range(0,size)) { 
    val elem = x(i)
    print(f"$elem%.3f\t") 
  }
  println
})
// "ConjugeCat","DependentesCat","TelefoneFixoCat","MaisDeUmaLinhaVect","InternetVect","SegurancaOnlineVect","BackupOnlineVect","SeguroDispositivoVect","SuporteTecnicoVect","TVaCaboVect","StreamingFilmesVect","TipoContratoVect","ContaCorreioCat","MetodoPagamentoVect","Mais65anos","MesesDeContrato","MesesCobrados"
1.000   0.461   -0.022  -0.138  0.152   0.010   -0.019  -0.143  0.158   -0.163  0.166  -0.180   0.185   -0.127  0.139   -0.144  0.138   -0.142  0.136   -0.296  0.248   0.022  -0.105   -0.088  0.130   0.044   0.409   0.112
0.461   1.000   -0.020  0.049   -0.037  -0.178  0.065   -0.223  0.120   -0.152  0.038  -0.162   0.048   -0.213  0.109   -0.098  -0.020  -0.073  -0.046  -0.268  0.236   0.140  -0.198   0.082   0.081   -0.165  0.195   -0.117
-0.022  -0.020  1.000   -0.305  -0.285  -0.339  0.484   0.059   0.061   0.082   0.029   0.057    0.056   0.066   0.053   0.098   0.012   0.090   0.020   0.007   -0.004  0.012  0.017    -0.000  -0.017  -0.017  -0.014  -0.305
-0.138  0.049   -0.305  1.000   -0.826  -0.199  -0.027  -0.144  -0.100  -0.016  -0.223  -0.016  -0.223  -0.141  -0.103  0.041   -0.270  0.058   -0.287  0.064   -0.075  0.166  -0.121   0.236   -0.046  -0.131  -0.311  -0.336
0.152   -0.037  -0.285  -0.826  1.000   0.401   -0.259  0.110   0.065   -0.032  0.208  -0.018   0.192   0.103   0.072   -0.099  0.265   -0.112  0.277   -0.069  0.078   -0.174  0.111   -0.237  0.056   0.142   0.321   0.518
0.010   -0.178  -0.339  -0.199  0.401   1.000   -0.700  0.442   -0.096  0.220   0.142  0.220    0.141   0.428   -0.080  0.031   0.327   0.043   0.315   0.265   -0.230  -0.356  0.389   -0.349  -0.057  0.203   -0.012  0.805
-0.019  0.065   0.484   -0.027  -0.259  -0.700  1.000   -0.025  0.299   0.135   0.097  0.135    0.097   -0.017  0.286   0.283   -0.056  0.269   -0.042  -0.091  0.053   0.099  -0.147   0.087   0.027   -0.103  0.011   -0.280
-0.143  -0.223  0.059   -0.144  0.110   0.442   -0.025  1.000   -0.669  0.405   0.015  0.392    0.029   0.539   -0.130  0.243   0.182   0.261   0.164   0.451   -0.385  -0.324  0.421   -0.234  -0.144  0.128   -0.304  0.378
0.158   0.120   0.061   -0.100  0.065   -0.096  0.299   -0.669  1.000   -0.061  0.259  -0.046   0.243   -0.138  0.375   0.067   0.117   0.045   0.139   -0.312  0.234   0.063  -0.189   -0.048  0.130   -0.021  0.354   0.210
-0.163  -0.152  0.082   -0.016  -0.032  0.220   0.135   0.405   -0.061  1.000   -0.702  0.379   -0.037  0.401   -0.058  0.307   0.041   0.304   0.045   0.363   -0.296  -0.167  0.288   -0.119  -0.126  0.046   -0.365  0.175
0.166   0.038   0.029   -0.223  0.208   0.142   0.097   0.015   0.259   -0.702  1.000  -0.037   0.287   0.011   0.260   -0.015  0.251   -0.012  0.248   -0.196  0.124   -0.105  -0.038  -0.161  0.100   0.066   0.390   0.396
-0.180  -0.162  0.057   -0.016  -0.018  0.220   0.135   0.392   -0.046  0.379   -0.037  1.000   -0.702  0.441   -0.104  0.417   -0.070  0.417   -0.070  0.406   -0.337  -0.187  0.267   -0.110  -0.116  0.063   -0.346  0.141
0.185   0.048   0.056   -0.223  0.192   0.141   0.097   0.029   0.243   -0.037  0.287  -0.702   1.000   -0.031  0.310   -0.133  0.370   -0.134  0.371   -0.242  0.168   -0.083  -0.015  -0.170  0.089   0.048   0.369   0.432
-0.127  -0.213  0.066   -0.141  0.103   0.428   -0.017  0.539   -0.138  0.401   0.011  0.441    -0.031  1.000   -0.673  0.334   0.083   0.327   0.089   0.485   -0.424  -0.282  0.420   -0.234  -0.148  0.145   -0.305  0.332
0.139   0.109   0.053   -0.103  0.072   -0.080  0.286   -0.130  0.375   -0.058  0.260  -0.104   0.310   -0.673  1.000   -0.040  0.230   -0.034  0.223   -0.349  0.279   0.014  -0.188   -0.046  0.133   -0.041  0.352   0.260
-0.144  -0.098  0.098   0.041   -0.099  0.031   0.283   0.243   0.067   0.307   -0.015  0.417   -0.133  0.334   -0.040  1.000   -0.712  0.544   -0.251  0.279   -0.233  -0.032  0.078   -0.011  -0.058  0.032   -0.276  -0.056
0.138   -0.020  0.012   -0.270  0.265   0.327   -0.056  0.182   0.117   0.041   0.251  -0.070   0.370   0.083   0.230   -0.712  1.000   -0.252  0.535   -0.098  0.052   -0.237  0.180   -0.263  0.026   0.078   0.277   0.612
-0.142  -0.073  0.090   0.058   -0.112  0.043   0.269   0.261   0.045   0.304   -0.012  0.417   -0.134  0.327   -0.034  0.544   -0.252  1.000   -0.712  0.289   -0.234  -0.040  0.096   -0.007  -0.067  0.007   -0.283  -0.052
0.136   -0.046  0.020   -0.287  0.277   0.315   -0.042  0.164   0.139   0.045   0.248  -0.070   0.371   0.089   0.223   -0.251  0.535   -0.712  1.000   -0.108  0.053   -0.229  0.161   -0.266  0.035   0.102   0.284   0.608
-0.296  -0.268  0.007   0.064   -0.069  0.265   -0.091  0.451   -0.312  0.363   -0.196  0.406   -0.242  0.485   -0.349  0.279   -0.098  0.289   -0.108  1.000   -0.642  -0.212  0.391   -0.029  -0.226  0.079   -0.664  0.071
0.248   0.236   -0.004  -0.075  0.078   -0.230  0.053   -0.385  0.234   -0.296  0.124  -0.337   0.168   -0.424  0.279   -0.233  0.052   -0.234  0.053   -0.642  1.000   0.184  -0.322   0.023   0.194   -0.074  0.551   -0.095
0.022   0.140   0.012   0.166   -0.174  -0.356  0.099   -0.324  0.063   -0.167  -0.105  -0.187  -0.083  -0.282  0.014   -0.032  -0.237  -0.040  -0.229  -0.212  0.184   1.000  -0.283   0.235   0.066   -0.125  0.032   -0.375
-0.105  -0.198  0.017   -0.121  0.111   0.389   -0.147  0.421   -0.189  0.288   -0.038  0.267   -0.015  0.420   -0.188  0.078   0.180   0.096   0.161   0.391   -0.322  -0.283  1.000   -0.455  -0.423  0.115   -0.252  0.312
-0.088  0.082   -0.000  0.236   -0.237  -0.349  0.087   -0.234  -0.048  -0.119  -0.161  -0.110  -0.170  -0.234  -0.046  -0.011  -0.263  -0.007  -0.266  -0.029  0.023   0.235  -0.455   1.000   -0.230  -0.130  -0.194  -0.409
0.130   0.081   -0.017  -0.046  0.056   -0.057  0.027   -0.144  0.130   -0.126  0.100  -0.116   0.089   -0.148  0.133   -0.058  0.026   -0.067  0.035   -0.226  0.194   0.066  -0.423   -0.230  1.000   -0.006  0.268   0.011
0.044   -0.165  -0.017  -0.131  0.142   0.203   -0.103  0.128   -0.021  0.046   0.066  0.063    0.048   0.145   -0.041  0.032   0.078   0.007   0.102   0.079   -0.074  -0.125  0.115   -0.130  -0.006  1.000   0.053   0.184
0.409   0.195   -0.014  -0.311  0.321   -0.012  0.011   -0.304  0.354   -0.365  0.390  -0.346   0.369   -0.305  0.352   -0.276  0.277   -0.283  0.284   -0.664  0.551   0.032  -0.252   -0.194  0.268   0.053   1.000   0.228
0.112   -0.117  -0.305  -0.336  0.518   0.805   -0.280  0.378   0.210   0.175   0.396  0.141    0.432   0.332   0.260   -0.056  0.612   -0.052  0.608   0.071   -0.095  -0.375  0.312   -0.409  0.011   0.184   0.228   1.000

// SuporteTecnicoCat x SegurancaOnlineCat = 0.811 can be considered multicolinear
// MesesCobrados x InternetVect = 0.805 can be considered multicolinear

// ----- building the logistic regression model

import org.apache.spark.ml.feature.StandardScaler
val stdScaler = new StandardScaler().
setWithStd(true).
setWithMean(true).
setInputCol("features").
setOutputCol("scaledFeatures")

import org.apache.spark.ml.classification.LogisticRegression
val lr = new LogisticRegression
lr.setRegParam(0.01).setMaxIter(500).setFitIntercept(true).setFeaturesCol("scaledFeatures")

import org.apache.spark.ml.Pipeline

val pipeline = new Pipeline().setStages(Array(dfrawIndexer1,dfrawIndexer2,dfrawIndexer3,dfrawIndexer4,dfrawIndexer5,dfrawIndexer6,dfrawIndexer7,dfrawIndexer8,dfrawIndexer9,dfrawIndexer10,dfrawIndexer11,dfrawIndexer12,dfrawIndexer13,dfrawIndexer14,dfrawIndexer41,dfrawIndexer51,dfrawIndexer61,dfrawIndexer71,dfrawIndexer81,dfrawIndexer91,dfrawIndexer101,dfrawIndexer111,dfrawIndexer121,dfrawIndexer141,va,stdScaler,lr))

val Array(trainingData, testData) = df2.randomSplit(Array(0.7,0.3),11L)

trainingData.cache
testData.cache

val model = pipeline.fit(trainingData)

val pred = model.transform(testData)

import org.apache.spark.ml.evaluation.BinaryClassificationEvaluator
val bceval = new BinaryClassificationEvaluator()

bceval.setMetricName("areaUnderROC").evaluate(pred)
res30: Double = 0.866040354035403

bceval.setMetricName("areaUnderPR").evaluate(pred)
res31: Double = 0.8627403043362831

df2.groupBy("label").count.show
+-----+-----+
|label|count|
+-----+-----+
|  0.0| 5174|
|  1.0| 5174|
+-----+-----+

val validPredicts = pred.select("label","prediction").rdd.map( row => (row.getDouble(0),row.getDouble(1)) )

import org.apache.spark.mllib.evaluation.MulticlassMetrics
val metrics = new MulticlassMetrics(validPredicts)

metrics.confusionMatrix
res32: org.apache.spark.mllib.linalg.Matrix =
1104.0  281.0
392.0   1234.0

import org.apache.spark.ml.classification.LogisticRegressionModel

val lrmodel = model.stages(26).asInstanceOf[LogisticRegressionModel]

println(s"LR Model coefficients:\n${lrmodel.coefficients.toArray.mkString("\n")}")
LR Model coefficients:
0.017831400148015975
-0.2467887072948526
0.07595570485126726
-0.06762543345634033
0.02389037287130233
0.18707935372807494
-0.107960685019907
0.18048227578317516
-0.10701564130930612
0.08441516795684584
0.0029192948934468107
0.053491965591162316
0.03602412964637361
0.1497164767451014
-0.07074837036377406
-0.004502596607194114
0.09323360630517721
5.928805167593465E-5
0.08867739710309461
0.396466854598975
-0.2898759561035809
-0.18809209054700618
0.34558016479851633
0.08050282889937858
0.03503706993738624
-0.18042851228397053
-0.5670242653934209
0.17697476280132343

-------------------

import org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}

val paramGrid = new ParamGridBuilder().
addGrid(lr.regParam, Array(0.1, 0.01, 0.001)).
addGrid(lr.fitIntercept).
addGrid(lr.maxIter, Array(100,300,500)).build()

import org.apache.spark.ml.evaluation.BinaryClassificationEvaluator

val cv = new CrossValidator().
setEstimator(pipeline).
setEvaluator(new BinaryClassificationEvaluator).
setEstimatorParamMaps(paramGrid).
setNumFolds(3)

val model = cv.fit(trainingData)

import org.apache.spark.ml.PipelineModel
val bestmodel = model.bestModel.asInstanceOf[PipelineModel]

import org.apache.spark.ml.classification.LogisticRegressionModel
val lrmodel = bestmodel.stages(26).asInstanceOf[LogisticRegressionModel]

lrmodel.getRegParam
res1: Double = 0.001

lrmodel.getMaxIter
res2: Int = 100

lrmodel.getThreshold
res3: Double = 0.5

lrmodel.getFitIntercept
res4: Boolean = true

lrmodel.getStandardization
res5: Boolean = true

val pred = bestmodel.transform(testData)

val bceval = new BinaryClassificationEvaluator()

bceval.setMetricName("areaUnderROC").evaluate(pred)
res39: Double = 0.8662194895960146

bceval.setMetricName("areaUnderPR").evaluate(pred)
res40: Double = 0.8625581037199371

df2.groupBy("label").count.show
+-----+-----+
|label|count|
+-----+-----+
|  0.0| 5174|
|  1.0| 5174|
+-----+-----+

val validPredicts = pred.select("label","prediction").rdd.map( row => (row.getDouble(0),row.getDouble(1)) )

import org.apache.spark.mllib.evaluation.MulticlassMetrics
val metrics = new MulticlassMetrics(validPredicts)

metrics.confusionMatrix
res41: org.apache.spark.mllib.linalg.Matrix =
1102.0  277.0
394.0   1238.0

println(s"LR Model coefficients:\n${lrmodel.coefficients.toArray.mkString("\n")}")
LR Model coefficients:
0.043797314011758647
-0.27186099680630865
0.12397582996573576
-0.08031852477441338
0.00871417698794238
0.12487086096550955
-0.09490754475220771
0.15571552929726806
-0.13790791387081314
0.05862353106280387
-0.02318576758898895
0.02891321120046848
0.008688070013797084
0.12569843756234186
-0.10206203865041984
-0.01691281779103668
0.054710617177445166
-0.012518279840516082
0.05031217816649388
0.3981392163375927
-0.30881123302639607
-0.19688976412938905
0.38433892461916097
0.11120878481461628
0.06946403687890337
-0.19825176559322294
-0.6423069189649504
0.3952710219308188
